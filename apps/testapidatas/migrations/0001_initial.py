# Generated by Django 2.0.5 on 2020-02-16 14:35

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiRequestData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_project', models.CharField(default='', max_length=100, verbose_name='测试项目')),
                ('test_module', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='测试模块')),
                ('test_page', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='测试页面')),
                ('case_priority', models.CharField(blank=True, choices=[('P0', '冒烟用例'), ('P1', '系统的重要功能用例'), ('P2', '系统的一般功能用例'), ('P3', '极低级别的用例')], default='P1', max_length=10, null=True, verbose_name='用例优先级')),
                ('test_case_title', models.CharField(default='', max_length=200, verbose_name='测试内容的名称')),
                ('is_run_case', models.BooleanField(default=True, verbose_name='是否运行')),
                ('request_url', models.CharField(blank=True, default='xpath', max_length=1000, null=True, verbose_name='请求的url')),
                ('is_auto_get_cookies', models.BooleanField(default=True, verbose_name='是否自动获取cookies')),
                ('is_use_cache', models.BooleanField(default=True, verbose_name='是否使用缓存cookies')),
                ('is_post', models.BooleanField(default=True, verbose_name='是否Post请求')),
                ('is_json', models.BooleanField(default=False, verbose_name='是否JSON串')),
                ('case_counts', models.IntegerField(default='1', help_text='循环次数，请填写数字，例如：1、2、3', verbose_name='循环次数')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('depend_case', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='testapidatas.ApiRequestData', verbose_name='依赖的接口的用例')),
            ],
            options={
                'verbose_name': '接口数据',
                'verbose_name_plural': '接口数据',
            },
        ),
        migrations.CreateModel(
            name='RequestCookies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_key', models.CharField(blank=True, default='request_key', max_length=100, null=True, verbose_name='键值对的键')),
                ('is_auto_input', models.BooleanField(default=False, verbose_name='是否自动输入键值对的值')),
                ('auto_input_type', models.CharField(blank=True, choices=[('1', '数字'), ('2', '字母'), ('3', '数字和字母'), ('4', '数字和字母和特殊符号'), ('5', '数字和字母和特殊符号和转义字符'), ('6', '汉字')], default='6', max_length=10, null=True, verbose_name='自动输入字符的类型')),
                ('auto_input_long', models.CharField(blank=True, default='300', help_text='字符的个数，请填写数字，例如：1、2、3', max_length=100, null=True, verbose_name='自动输入的字符的个数')),
                ('request_value', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='键值对的值')),
                ('is_with_time', models.BooleanField(default=True, verbose_name='是否带时间串')),
                ('is_check', models.BooleanField(default=True, verbose_name='是否进行验证')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('apirequestdata', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='testapidatas.ApiRequestData', verbose_name='依赖的接口用例')),
            ],
            options={
                'verbose_name': '请求Cookies相关内容',
                'verbose_name_plural': '请求Cookies相关内容',
            },
        ),
        migrations.CreateModel(
            name='RequestDatas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_key', models.CharField(blank=True, default='request_key', max_length=100, null=True, verbose_name='键值对的键')),
                ('is_auto_input', models.BooleanField(default=False, verbose_name='是否自动输入键值对的值')),
                ('auto_input_type', models.CharField(blank=True, choices=[('1', '数字'), ('2', '字母'), ('3', '数字和字母'), ('4', '数字和字母和特殊符号'), ('5', '数字和字母和特殊符号和转义字符'), ('6', '汉字')], default='6', max_length=10, null=True, verbose_name='自动输入字符的类型')),
                ('auto_input_long', models.CharField(blank=True, default='300', help_text='字符的个数，请填写数字，例如：1、2、3', max_length=100, null=True, verbose_name='自动输入的字符的个数')),
                ('request_value', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='键值对的值')),
                ('is_with_time', models.BooleanField(default=False, verbose_name='是否带时间串')),
                ('is_check', models.BooleanField(default=False, verbose_name='是否进行验证')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('apirequestdata', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='testapidatas.ApiRequestData', verbose_name='依赖的接口用例')),
            ],
            options={
                'verbose_name': '请求bodyData相关内容',
                'verbose_name_plural': '请求bodyData相关内容',
            },
        ),
        migrations.CreateModel(
            name='RequestHeaders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_key', models.CharField(blank=True, default='request_key', max_length=100, null=True, verbose_name='键值对的键')),
                ('request_value', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='键值对的值')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('apirequestdata', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='testapidatas.ApiRequestData', verbose_name='依赖的接口用例')),
            ],
            options={
                'verbose_name': '请求Headers相关内容',
                'verbose_name_plural': '请求Headers相关内容',
            },
        ),
        migrations.CreateModel(
            name='RequestUrlDatas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_key', models.CharField(blank=True, default='request_key', max_length=100, null=True, verbose_name='键值对的键')),
                ('is_auto_input', models.BooleanField(default=False, verbose_name='是否自动输入键值对的值')),
                ('auto_input_type', models.CharField(blank=True, choices=[('1', '数字'), ('2', '字母'), ('3', '数字和字母'), ('4', '数字和字母和特殊符号'), ('5', '数字和字母和特殊符号和转义字符'), ('6', '汉字')], default='6', max_length=10, null=True, verbose_name='自动输入字符的类型')),
                ('auto_input_long', models.CharField(blank=True, default='300', help_text='字符的个数，请填写数字，例如：1、2、3', max_length=100, null=True, verbose_name='自动输入的字符的个数')),
                ('request_value', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='键值对的值')),
                ('is_with_time', models.BooleanField(default=False, verbose_name='是否带时间串')),
                ('is_check', models.BooleanField(default=False, verbose_name='是否进行验证')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('apirequestdata', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='testapidatas.ApiRequestData', verbose_name='依赖的接口用例')),
            ],
            options={
                'verbose_name': '请求UrlData相关内容',
                'verbose_name_plural': '请求UrlData相关内容',
            },
        ),
    ]
