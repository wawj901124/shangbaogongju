# Generated by Django 2.0.5 on 2020-04-11 20:32

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UpdateDbData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_project', models.CharField(default='', max_length=100, verbose_name='测试项目')),
                ('test_module', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='测试模块')),
                ('test_page', models.CharField(default='', max_length=100, verbose_name='测试页面')),
                ('case_priority', models.CharField(blank=True, choices=[('P0', '冒烟用例'), ('P1', '系统的重要功能用例'), ('P2', '系统的一般功能用例'), ('P3', '极低级别的用例')], default='P1', max_length=10, null=True, verbose_name='用例优先级')),
                ('test_case_title', models.CharField(default='', max_length=200, verbose_name='测试内容的名称')),
                ('is_run_case', models.BooleanField(default=True, verbose_name='是否运行')),
                ('db_host', models.CharField(blank=True, default='192.168.100.198', max_length=100, null=True, verbose_name='数据库IP')),
                ('db_port', models.CharField(blank=True, default='3306', max_length=100, null=True, verbose_name='数据库端口')),
                ('db_user', models.CharField(blank=True, default='lepus_user', max_length=100, null=True, verbose_name='数据库用户名')),
                ('db_password', models.CharField(blank=True, default='123456', max_length=100, null=True, verbose_name='数据库密码')),
                ('db_database', models.CharField(blank=True, default='testconn', max_length=100, null=True, verbose_name='数据库库名')),
                ('db_charset', models.CharField(blank=True, default='utf8', max_length=100, null=True, verbose_name='数据库编码格式')),
                ('db_biao', models.CharField(blank=True, default='testdatas_clickandback', help_text='多个表之间以英文半角逗号(,)隔开', max_length=1000, null=True, verbose_name='数据库中的表')),
                ('db_ziduan', models.CharField(blank=True, default='current_page_click_ele_find_value', help_text='多个字段之间以英文半角逗号(,)隔开，全部字段请输入*', max_length=1000, null=True, verbose_name='数据库中的表的字段名')),
                ('db_xiugaiqiandezhi', models.CharField(blank=True, default='/html/body/', max_length=1000, null=True, verbose_name='数据库中的表的字段替换前的值')),
                ('db_xiugaihoudezhi', models.CharField(blank=True, default='修改后的油烟餐饮', max_length=1000, null=True, verbose_name='数据库中的表的字段替换后的值')),
                ('db_tiaojianziduan', models.CharField(blank=True, default='id', help_text='多个条件字段之间以英文半角逗号(,)隔开', max_length=100, null=True, verbose_name='where条件字段名')),
                ('db_tiaojianzhi', models.CharField(blank=True, default='10', help_text="多个条件字段值之间以英文半角逗号(,)隔开，如果是遍历所有，请填写'all'", max_length=1000, null=True, verbose_name='where条件字段值')),
                ('db_paixuziduan', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='排序字段名')),
                ('is_daoxu', models.BooleanField(default=True, verbose_name='是否倒序')),
                ('db_qianjiwei', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='获取前几条数据')),
                ('case_counts', models.IntegerField(default='1', help_text='用例循环次数，请填写数字，例如：1、2、3', verbose_name='用例循环次数')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('depend_case', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='testupdatadb.UpdateDbData', verbose_name='依赖的前置用例')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='添加人')),
            ],
            options={
                'verbose_name': '批量替换数据库中表中某字段的内容',
                'verbose_name_plural': '批量替换数据库中表中某字段的内容',
            },
        ),
    ]
