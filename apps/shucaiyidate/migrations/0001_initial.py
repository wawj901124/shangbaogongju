# Generated by Django 2.0.5 on 2020-08-06 16:26

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import shucaiyidate.modelsguide
import shucaiyidate.modelsnewdev


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionDevTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_file_name', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='原有dev文件路径')),
                ('config_project', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='入库的项目名称')),
                ('root_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='入库的根节点名称')),
                ('export_root_num', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='导出的数据库根节点ID号')),
                ('new_file_name', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='导出的新的dev文件路径')),
                ('is_read_original_dev', models.BooleanField(default=False, verbose_name='是否从原dev文件导入数据到数据库')),
                ('is_create_new_dev', models.BooleanField(default=False, verbose_name='是否导出数据库中的节点数据到新的dev文件中')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '节点数据入库和出库',
                'verbose_name_plural': '节点数据入库和出库',
            },
        ),
        migrations.CreateModel(
            name='CloseXieYiCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_command', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='关闭协议命令')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '关闭协议命令',
                'verbose_name_plural': '关闭协议命令',
            },
        ),
        migrations.CreateModel(
            name='CloseXieYiCommandOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('close_command', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='关闭协议命令')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '关闭协议命令',
                'verbose_name_plural': '关闭协议命令',
            },
        ),
        migrations.CreateModel(
            name='ConfigCollectFactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_collect_factor_factorcode', models.CharField(blank=True, default='', help_text='例如：w01018', max_length=100, null=True, verbose_name='监测因子代码（factorCode）')),
                ('config_collect_factor_findmode', models.CharField(blank=True, choices=[('OFFSET', '固定偏移'), ('MARK', '固定标识')], default='OFFSET', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>查找模式，有以下选项：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">OFFSET</td>\n                                        <td class="tabledataxuxian">固定偏移；</td>\n                                        <td class="tabledataxuxian">相对包头的偏移量；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MARK</td>\n                                        <td class="tabledataxuxian">固定标识；</td>\n                                         <td class="tabledataxuxian">所有的固定标识不能有包含与被包含的关系，否则没法解析；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='查找模式（findMode）')),
                ('config_collect_factor_offset', models.CharField(blank=True, default='', help_text='相对包头的，只针对固定偏移模式；</br>例如:</br>收到的数据为：01 02 03 04 05，01 为包头，04 为需要解析的数据，那么 offset 应该为 3 ', max_length=100, null=True, verbose_name='偏移量（offset）')),
                ('config_collect_factor_mark', models.CharField(blank=True, default='', help_text='只针对固定标识模式；', max_length=100, null=True, verbose_name='固定标识（mark）')),
                ('config_collect_factor_len', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='解析的宽度（len）')),
                ('config_collect_factor_decodetype', models.CharField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据解析算法，有时须与解析宽度配合使用，有以下选项：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">算法代码</th>\n                                        <th class="tabledataxuxian">算法描述</th>                                        \n                                        <th class="tabledataxuxian">举例</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode1</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(小端)转换成一个float型数值4321；</td>\n                                        <td class="tabledataxuxian">4855D045-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode2</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(大端)转换成一个float型数值1234；</td>\n                                         <td class="tabledataxuxian">45D05548-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode3</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(小端)转换成一个float型数值2143；</td>\n                                        <td class="tabledataxuxian">D0454855-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode4</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(大端)转换成一个float型数值3412；</td>\n                                         <td class="tabledataxuxian">554845D0-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode5</td>\n                                        <td class="tabledataxuxian">字符串转换成浮点数；</td>\n                                        <td class="tabledataxuxian">“12345.3”-》 12345.3；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode6</td>\n                                        <td class="tabledataxuxian">字符串转换成整形转换宽度由上面len决定,如len=2；</td>\n                                         <td class="tabledataxuxian">len=2 &nbsp; “12345.63”-》 12</br>len=7 &nbsp; “12345.63”-》 12345</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode7@字节序</br>不传递字节序时，默认为12</td>\n                                        <td class="tabledataxuxian">\n                                            字符数组转换成短整型</br>\n                                            decode7、decode7@12、decode7@21等算法默认解析出的结果是有符号数</br>\n                                            如果现场特殊，需要解析无符号数，可按照如下方式配置：decode7@u12、decode7@u21;\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode7@12</br>\n                                            源字节数组(HEX)：31 32</br>\n                                            解析结果：12594；\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode8</td>\n                                        <td class="tabledataxuxian">将一个字符的十六进制直接转换成对应的十进制；</td>\n                                         <td class="tabledataxuxian">0x0a-》10；</td>\n                                    </tr>\n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode9@bitn</br>n为比特位数</td>\n                                        <td class="tabledataxuxian">\n                                            取对应字节的比特位，返回0或者1<br/>\n                                            @后面为参数格式为：@bitn<br/>\n                                            支持解析多位比特位，格式为：<br/>\n                                            decode9@bitEnd-bitStart,比如 decode9@bit1-bit0 \n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                deocde9@bit3 <br/>\n                                                0x04-》1 <br/>\n                                                0x03-》0 <br/>\n                                            例 2: <br/>\n                                                decode9@bit1-bit0 <br/>\n                                                0x01-》1 <br/>\n                                                0x02-》2 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode10  @字节序 <br/>\n                                            不传递字节序时，默认为 1234 \n                                        </td>\n                                        <td class="tabledataxuxian">将十六进制字符串直接转换成4字节浮点数（可配置顺序）；</td>\n                                         <td class="tabledataxuxian">\n                                            规则：decode10@1234 <br/>\n                                            源字符串(ASCII)： <br/>\n                                            449a4000 <br/>\n                                            解析结果：1234.0 <br/>\n                                         </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode11 @字节序 <br/>\n                                            不传递字节序时，默认为 12\n                                        </td>\n                                        <td class="tabledataxuxian">将十六进制字符串直接转换成2字节短整型（可配置顺序）；</td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode11@12 <br/>\n                                            源字符串(ASCII)：449a <br/>\n                                            解析结果：17562 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode12 @字节序 <br/>\n                                            不传递字节序时，默认为 1234 \n                                        </td>\n                                        <td class="tabledataxuxian">将IEEF745格式的4字节数据转成一个float型数值（可配置顺序）；</td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode12@4312 <br/>\n                                            源字节数组（HEX）：40 00 9a 44 <br/>\n                                            解析结果：1234.0\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode13@u 字节序 <br/> \n                                            decode13@s 字节序\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 4 字节整型数据；<br/>\n                                            u 代表无符号数；<br/>\n                                            s 代表有符号数；<br/>\n                                            注：配置时必须指明符号类型，如果不明确是什么符号类型，请使用 s ；\n                                        </td>\n                                        <td class="tabledataxuxian"> \n                                                例 1： 规则：decode13@u1234 ，源字节数组（HEX）：45 1C 30 2F ，解析结果：1159475247（即45 1C 30 2F-》451C302F->1159475247）；<br/>\n                                                例 2： 规则：decode13@s3412 ，源字节数组（HEX）：ff 0b ff ff ，解析结果:-245 （即ff 0b ff ff-》FFFFFF0B->-245）；<br/>\n                                                例 3： 规则：decode13@u3412 ，源字节数组（HEX）：ff 0b ff ff ，解析结果: 4294967051（即ff 0b ff ff-》FFFFFF0B->4294967051；<br/>\n                                                注：对比例 2 和例 3 可观察有符号和无符号的解析差别；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode14@u 字节序 <br/>\n                                            decode14@s 字节序\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 4 字节整型数据；<br/>\n                                            u 代表无符号数；<br/>\n                                            s 代表有符号数；<br/>\n                                            注：配置时必须指明符号类型，如果不明确是什么符号类型，请使用 s ；</td>\n                                         <td class="tabledataxuxian">                                                \n                                                例 1： 规则：decode14@u1234 ，源字节数组（ASCII）：45 1C 30 2F ，解析结果：1159475247（即45 1C 30 2F-》451C302F->1159475247）；<br/>\n                                                例 2： 规则：decode14@s3412 ，源字节数组（ASCII）：ff 0b ff ff ，解析结果:-245 （即ff 0b ff ff-》FFFFFF0B->-245）；<br/>\n                                                例 3： 规则：decode14@u3412 ，源字节数组（ASCII）：ff 0b ff ff ，解析结果: 4294967051（即ff 0b ff ff-》FFFFFF0B->4294967051；<br/>\n                                                注：对比例 2 和例 3 可观察有符号和无符号的解析差别；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode15@字节序</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 8 字节有符号浮点数<br/>\n                                            注意： <br/>\n                                            1、本算法针对 linux 版本为 3.2.0及其以上版本，\n                                                涉及的产品包括动态管控仪及其衍生产品（数采\n                                                仪 6.0、用电量数采仪…..）。 <br/>\n                                            2、如果是 linux 版本为 2.6.0（新国标版本）， \n                                                字 节 序 相 对linux3.2.0来说需前后4字节整体对调。 \n                                                例如:<br/>\n                                                 linux3.2.0: decode15@12345678 等价于 linux2.6.0: decode15@56781234 \n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： 规则：decode15@12345678 ，源字节数组（HEX）： 40aa4875c28f5c29 ，解析结果：3364.23（即40aa4875c28f5c29-》40AA4875C28F5C29->3364.23）<br/>\n                                            注意： <br/>\n                                                linux3.2.0: decode15@12345678 等价于 linux2.6.0: decode15@56781234 \n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode16</td>\n                                        <td class="tabledataxuxian">16 进制字节数组转化为 16 进制字符串对应的浮点数；</td>\n                                        <td class="tabledataxuxian">\n                                            例 1： 规则：decode16 ，源字节数组（HEX）： 12 34 56 78 ，解析结果：12345678.0（即12 34 56 78-》12345678.0）；\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode17@ 010203040506 </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组按权重累加,@符号后传递的是指数，默认底数是 10。指数是 16 进制的，20 表示 32 <br/>\n                                            decode17@010203040506070F 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 15 次方 <br/>\n                                            decode17@-1-2-3-4-5-a 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 10 次方 <br/>\n                                            正数指数范围是 00 到 FF <br/>\n                                            负数指数范围是-0 到-F <br/>\n\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode17@01020304 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：12340.0 <br/>\n                                            例 2： <br/>\n                                                规则：decode17@-1-2-3-4 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：0.432100 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode18</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 3 字节数组转化为 16 进制字符串对应的 float 浮点数,小数点位置从报文读取 <br/>\n                                            第 1 字节标识小数点位置 第 2、3 字节标识有效数据 <br/>\n                                            第 1 字节的第 1 位为整数的符号位 <br/>\n                                            第 1 字节的第 2 位为小数点位，表示向左右移几位 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode18 <br/>\n                                                源字节数组（HEX）： 03 45 24 <br/>\n                                                解析结果：452.4.0 <br/>\n                                            例 2： <br/>\n                                                规则：decode18 <br/>\n                                                源字节数组（HEX）： 7E 45 24 <br/>\n                                                解析结果：0. 004524 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode19</td>\n                                        <td class="tabledataxuxian">\n                                            整数部分为16进制4字节数整形数据(字节序 1234), <br/>\n                                            小数部分为16 进制 4 字节浮点型数据（字节序 1234） <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： \n                                                规则：decode19 \n                                                源字节数组（HEX）： 00 00 49 1D 3C DE 5A 17 \n                                                解析结果：18717.027143\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode20</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 4 字节数组按权重累加，底数固定为 10， <br/>\n                                            Decode20 <br/>\n                                            源字节数组（HEX） X1 X2 X3 X4 <br/>\n                                            结果=X1 * 10^0 + X2*10^2 + X3*10^4 + X4 * 10 ^6 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode20 <br/>\n                                                源字节数组(HEX) 00 02 00 01 <br/>\n                                                解析结果： 1000200 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode21@/1000 </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 8 字节数组,前部分为 4字节整形数据（字节序 3412）加上后部分为四字节整形数据（字节序 3412） / （可配置为加减乘除）1000（可配置参数）的数值。 <br/>\n                                            decode21 不传任何参数和运算符，<br/>\n                                            或者传递的运算符非以上四种，<br/>\n                                            默认为解析结果为两个四字节整数相加，<br/>\n                                            如果要除以的参数为 0 时，默认为后半部分为 0，得到的结果是前四字节整数数据，<br/>\n                                            如果传递的参数为非数字，默认参数为 0，按以上规则进行运算 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode21@/1000 <br/>\n                                                源字节数组： <br/>\n                                                    00 02 00 01 02 40 00 00 <br/>\n                                                    00 02 00 01:65538 <br/>\n                                                    02 40 00 00:576 <br/>\n                                                参数：1000 <br/>\n                                                解析结果： 65538.576 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode22@H/100</td>\n                                        <td class="tabledataxuxian">\n                                            16 机制 2 字节数组，大写 H 代表解析数据 12，大写 L 解析顺序21， /表示操作符，也可以是+， -，*。 <br/>\n                                            100 表示要操作的参数，大写 H不写按照解析顺序 12 数据进行解析，<br/>\n                                            操作符不写，默认得到的数据为 2 字节解析得到的数值，<br/>\n                                            注意：如果除以的参数为 0，则得到的数据默认为 0 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例：\n                                                decode22@H/100 <br/>\n                                                源字节数组： 01 72 <br/>\n                                                    按照的解析顺序 12 得到的数值为 370； <br/>\n                                                最终得到的数值为 370/100 = 3.7 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode23@字节序;ADMin,ADMax;rangMin,rangeMax\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            2 字节整型数据表示 ADC 值， 根据量程上下限进行计算出实时数据：<br/>\n                                                参数格式： <br/>\n                                                    docode23@字节序; ADMin,ADMax; rangeMin,rangeMax  <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例如：  <br/>\n                                                decode23@12;0,65535;100,200  <br/>\n                                                源字节数组 10 20 <br/>\n                                                解析结果：106.2989  <br/>\n                                                解析结果公式：Y=（（rangeMax-rangeMin）*（X-ADMin））/(ADMax-ADMin)+rangeMin <br/>\n                                                其中X为（10 20 按照字节序12解析出的整数：1020-》4128） <br/>\n                                                Y = （（200-100）*（4128-0））/(65535-0)+100=412800/65535+100=106.2989242389563 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode24@字节序;ADMin,ADMax;rangMin,rangeMax\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            4 字节浮点数据表示 ADC 值， 根据量程上下限进行计算出实时数据： <br/>\n                                                参数格式： <br/>\n                                                    Decode24@字节序;ADMin,ADMax;rangeMin,rangeMax <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例如： <br/>\n                                                decode24@3412;0,40;0,4000 <br/>\n                                                源字节数组 00 00 41 a0 <br/>\n                                                解析结果：2000.0 <br/>\n                                                解析结果公式：Y=（（rangeMax-rangeMin）*（X-ADMin））/(ADMax-ADMin)+rangeMin <br/>\n                                                其中X为（ 00 00 41 a0 按照字节序3412解析出的整数：00 00 41 a0-》 41 a0 00 00 ->20.000000） <br/>\n                                                Y = （（4000-0）*（20-0））/(40-0)+0=80000/40+0=2000 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode25@ 010203040506 </td>\n                                        <td class="tabledataxuxian">\n                                            16进制字节数组对应的1字节字符串按权重累加,@符号后传递的是指数，默认底数是 10。指数是 16 进制的，20 表示 32 <br/>\n                                            decode25@010203040506070F 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 15 次方 <br/>\n                                            decode17@-1-2-3-4-5-a 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 10 次方 <br/>\n \n                                            正数指数范围是 00 到 FF <br/>\n                                            负数指数范围是-0 到-F <br/>\n\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode25@01020304 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：12340.0 <br/>\n \n                                            例 2： <br/>\n                                                规则：decode25@000A0B0C <br/>\n                                                源字节数组（HEX）： 10 20 30 40 <br/>\n                                                解析结果： 43200000000010.000000 <br/>\n \n                                            例 3： <br/>\n                                                规则：decode25@-1-2-3-4 <br/>\n                                                源字节数组（HEX）： 10 20 30 40 <br/>\n                                                解析结果： 1.234000 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                </table> \n                                <span>注意：该算法由算法库提供，当有不满足时，可适当进行扩展。</span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=100, null=True, verbose_name='数据解析算法（decodeType）')),
                ('config_collect_factor_operator', models.CharField(blank=True, choices=[('+', '+'), ('-', '-'), ('*', '*'), ('/', '/')], default='*', help_text='无特殊需求写*即可', max_length=10, null=True, verbose_name='操作符（operator）')),
                ('config_collect_factor_operand', models.CharField(blank=True, default='1', help_text='无特殊需求写1即可', max_length=100, null=True, verbose_name='操作数（operand）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '监测因子配置（factor）',
                'verbose_name_plural': '监测因子配置（factor）',
            },
        ),
        migrations.CreateModel(
            name='ConfigCollectReceivePors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_collect_receive_pors_factorcode', models.CharField(blank=True, default='', help_text='例如：i1210A；<br/>注意：当参数或者状态代码为SampleTime时，为特殊参数或者状态，</br>该参数或者状态代表前端仪器的采样时间，在发送给数据库时该参数或者状态是不发送的，</br>而是在实时数据发送时将该参数的值赋值给采样时间发送。', max_length=100, null=True, verbose_name='采集的参数或者状态的代码（factorCode）')),
                ('config_collect_receive_pors_factortype', models.CharField(blank=True, choices=[('PARAM', '参数因子'), ('STATE', '状态因子')], default='PARAM', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>参数或者状态类型，可选项如下：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">类型</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">STATE</td>\n                                        <td class="tabledataxuxian">状态因子；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">PARAM</td>\n                                        <td class="tabledataxuxian">参数因子；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='参数或者状态类型（factorType）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '参数&状态配置（stateFactor）',
                'verbose_name_plural': '参数&状态配置（stateFactor）',
            },
        ),
        migrations.CreateModel(
            name='ConfigCollectReceivePorsConvertrule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_collect_receive_pors_convertrule_ruletype', models.CharField(blank=True, choices=[('1', '枚举类型'), ('2', '小于最小值'), ('3', '大于最大值'), ('4', '最大值最小值之间')], default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>特殊规则类型，需要增加时以convertRule为单位进行增加，可增加多行，选择相应的类型时，对应的值才有意义，可选类型如下：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">类型</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">1</td>\n                                        <td class="tabledataxuxian">枚举类型；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">2</td>\n                                        <td class="tabledataxuxian">小于最小值；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">3</td>\n                                        <td class="tabledataxuxian">大于最大值；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">4</td>\n                                        <td class="tabledataxuxian">最大值最小值之间；</td>\n                                    </tr>\n                                </table> \n                                <span>注意：当配置多个特殊转换规则时，只要有满足的规则，之后的规则将不再判断，无特殊配置直接去掉convertRule节点。</span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=2, null=True, verbose_name='特殊规则类型（ruleType）')),
                ('config_collect_receive_pors_convertrule_enumvalue', models.CharField(blank=True, default='', help_text='多个值之间用分号隔开，如：2;5;78,只针对特殊规则类型为1（即枚举类型），<br/>当取值为枚举值其中之一时，将resultValue的值存起来；', max_length=100, null=True, verbose_name='枚举值（enumValue）')),
                ('config_collect_receive_pors_convertrule_minvalue', models.CharField(blank=True, default='', help_text='针对特殊规则类型为2（即小于最小值类型）或特殊规则类型为4(即最大值最小值之间类型)，<br/>取值小于最小值时，将resultValue的值存起来；<br/>或者取值在最大值和最小值之间，将resultValue的值存起来；', max_length=100, null=True, verbose_name='最小值（minValue）')),
                ('config_collect_receive_pors_convertrule_maxvalue', models.CharField(blank=True, default='', help_text='针对特殊规则类型为3（即大于最大值类型）或特殊规则类型为4(即最大值最小值之间类型)，<br/>取值大于最大值时，将resultValue的值存起来；<br/>或者取值在最大值和最小值之间，将resultValue的值存起来；', max_length=100, null=True, verbose_name='最大值（maxValue）')),
                ('config_collect_receive_pors_convertrule_resultvalue', models.CharField(blank=True, default='', help_text='与设置的规则和数值相对应的值', max_length=100, null=True, verbose_name='最终保存的值（resultValue）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '特殊转换规则（convertRule）',
                'verbose_name_plural': '特殊转换规则（convertRule）',
            },
        ),
        migrations.CreateModel(
            name='ConfigCollectReceivePorsSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_collect_receive_pors_section_datatype', models.CharField(blank=True, choices=[('FLOAT', '浮点型'), ('INT', '整型')], default='FLOAT', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据类型，不写默认为INT,可选选项如下：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">类型</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">INT</td>\n                                        <td class="tabledataxuxian">将解析到的值以整形的形式存储成字符串；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">FLOAT</td>\n                                        <td class="tabledataxuxian">将解析到的值以浮点数的形式存储成字符串；</td>\n                                    </tr>\n                                </table> \n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='数据类型（dataType）')),
                ('config_collect_receive_pors_section_strformat', models.CharField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                                    为空时默认为\'%d\'或\'%f\',\n                                                    <br/>具体根据dataType（数据类型）决定，\n                                                    <br/>数据类型为INT时，则为\'%d\'；\n                                                    <br/>数据类型为FLOAT时，则为\'%f\'。\n                                                    <br/>注意：</br>\n                                                    1.对于时间的数据是整形时，需要加字节个数的限制，如%02d（限制2个字节）或%04d（限制4个字节） ,如果没有加限制，时间格式会出现数字不够的现象，例如：7月1号展示为71 ，但正确需展示应为0701；<br/>\n                                                    2.对于非时间的数据是整形时，一般不需要加字节个数的限制，否则会出现数据不对应的问题,例如： 2500 如果是%02d限制后为25，数据错误；</br>    \n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=100, null=True, verbose_name='转换为字符串的格式（strFormat）')),
                ('config_collect_receive_pors_section_findmode', models.CharField(blank=True, choices=[('OFFSET', '固定偏移'), ('MARK', '固定标识')], default='OFFSET', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>查找模式，有以下选项：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">OFFSET</td>\n                                        <td class="tabledataxuxian">固定偏移；</td>\n                                        <td class="tabledataxuxian">相对包头的偏移量；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MARK</td>\n                                        <td class="tabledataxuxian">固定标识；</td>\n                                         <td class="tabledataxuxian">所有的固定标识不能有包含与被包含的关系，否则没法解析；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='查找模式（findMode）')),
                ('config_collect_receive_pors_section_offset', models.CharField(blank=True, default='', help_text='相对包头的，只针对固定偏移模式；', max_length=100, null=True, verbose_name='偏移量（offset）')),
                ('config_collect_receive_pors_section_mark', models.CharField(blank=True, default='', help_text='只针对固定标识模式；', max_length=100, null=True, verbose_name='固定标识（mark）')),
                ('config_collect_receive_pors_section_len', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='解析的宽度（len）')),
                ('config_collect_receive_pors_section_decodetype', models.CharField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据解析算法，有时须与解析宽度配合使用，有以下选项：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">算法代码</th>\n                                        <th class="tabledataxuxian">算法描述</th>                                        \n                                        <th class="tabledataxuxian">举例</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode1</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(小端)转换成一个float型数值4321；</td>\n                                        <td class="tabledataxuxian">4855D045-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode2</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(大端)转换成一个float型数值1234；</td>\n                                         <td class="tabledataxuxian">45D05548-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode3</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(小端)转换成一个float型数值2143；</td>\n                                        <td class="tabledataxuxian">D0454855-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode4</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(大端)转换成一个float型数值3412；</td>\n                                         <td class="tabledataxuxian">554845D0-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode5</td>\n                                        <td class="tabledataxuxian">字符串转换成浮点数；</td>\n                                        <td class="tabledataxuxian">“12345.3”-》 12345.3；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode6</td>\n                                        <td class="tabledataxuxian">字符串转换成整形转换宽度由上面len决定,如len=2；</td>\n                                         <td class="tabledataxuxian">len=2 &nbsp; “12345.63”-》 12</br>len=7 &nbsp; “12345.63”-》 12345</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode7@字节序</br>不传递字节序时，默认为12</td>\n                                        <td class="tabledataxuxian">\n                                            字符数组转换成短整型</br>\n                                            decode7、decode7@12、decode7@21等算法默认解析出的结果是有符号数</br>\n                                            如果现场特殊，需要解析无符号数，可按照如下方式配置：decode7@u12、decode7@u21;\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode7@12</br>\n                                            源字节数组(HEX)：31 32</br>\n                                            解析结果：12594；\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode8</td>\n                                        <td class="tabledataxuxian">将一个字符的十六进制直接转换成对应的十进制；</td>\n                                         <td class="tabledataxuxian">0x0a-》10；</td>\n                                    </tr>\n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode9@bitn</br>n为比特位数</td>\n                                        <td class="tabledataxuxian">\n                                            取对应字节的比特位，返回0或者1<br/>\n                                            @后面为参数格式为：@bitn<br/>\n                                            支持解析多位比特位，格式为：<br/>\n                                            decode9@bitEnd-bitStart,比如 decode9@bit1-bit0 \n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                deocde9@bit3 <br/>\n                                                0x04-》1 <br/>\n                                                0x03-》0 <br/>\n                                            例 2: <br/>\n                                                decode9@bit1-bit0 <br/>\n                                                0x01-》1 <br/>\n                                                0x02-》2 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode10  @字节序 <br/>\n                                            不传递字节序时，默认为 1234 \n                                        </td>\n                                        <td class="tabledataxuxian">将十六进制字符串直接转换成4字节浮点数（可配置顺序）；</td>\n                                         <td class="tabledataxuxian">\n                                            规则：decode10@1234 <br/>\n                                            源字符串(ASCII)： <br/>\n                                            449a4000 <br/>\n                                            解析结果：1234.0 <br/>\n                                         </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode11 @字节序 <br/>\n                                            不传递字节序时，默认为 12\n                                        </td>\n                                        <td class="tabledataxuxian">将十六进制字符串直接转换成2字节短整型（可配置顺序）；</td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode11@12 <br/>\n                                            源字符串(ASCII)：449a <br/>\n                                            解析结果：17562 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode12 @字节序 <br/>\n                                            不传递字节序时，默认为 1234 \n                                        </td>\n                                        <td class="tabledataxuxian">将IEEF745格式的4字节数据转成一个float型数值（可配置顺序）；</td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode12@4312 <br/>\n                                            源字节数组（HEX）：40 00 9a 44 <br/>\n                                            解析结果：1234.0\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode13@u 字节序 <br/> \n                                            decode13@s 字节序\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 4 字节整型数据；<br/>\n                                            u 代表无符号数；<br/>\n                                            s 代表有符号数；<br/>\n                                            注：配置时必须指明符号类型，如果不明确是什么符号类型，请使用 s ；\n                                        </td>\n                                        <td class="tabledataxuxian"> \n                                                例 1： 规则：decode13@u1234 ，源字节数组（HEX）：45 1C 30 2F ，解析结果：1159475247（即45 1C 30 2F-》451C302F->1159475247）；<br/>\n                                                例 2： 规则：decode13@s3412 ，源字节数组（HEX）：ff 0b ff ff ，解析结果:-245 （即ff 0b ff ff-》FFFFFF0B->-245）；<br/>\n                                                例 3： 规则：decode13@u3412 ，源字节数组（HEX）：ff 0b ff ff ，解析结果: 4294967051（即ff 0b ff ff-》FFFFFF0B->4294967051；<br/>\n                                                注：对比例 2 和例 3 可观察有符号和无符号的解析差别；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode14@u 字节序 <br/>\n                                            decode14@s 字节序\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 4 字节整型数据；<br/>\n                                            u 代表无符号数；<br/>\n                                            s 代表有符号数；<br/>\n                                            注：配置时必须指明符号类型，如果不明确是什么符号类型，请使用 s ；</td>\n                                         <td class="tabledataxuxian">                                                \n                                                例 1： 规则：decode14@u1234 ，源字节数组（ASCII）：45 1C 30 2F ，解析结果：1159475247（即45 1C 30 2F-》451C302F->1159475247）；<br/>\n                                                例 2： 规则：decode14@s3412 ，源字节数组（ASCII）：ff 0b ff ff ，解析结果:-245 （即ff 0b ff ff-》FFFFFF0B->-245）；<br/>\n                                                例 3： 规则：decode14@u3412 ，源字节数组（ASCII）：ff 0b ff ff ，解析结果: 4294967051（即ff 0b ff ff-》FFFFFF0B->4294967051；<br/>\n                                                注：对比例 2 和例 3 可观察有符号和无符号的解析差别；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode15@字节序</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 8 字节有符号浮点数<br/>\n                                            注意： <br/>\n                                            1、本算法针对 linux 版本为 3.2.0及其以上版本，\n                                                涉及的产品包括动态管控仪及其衍生产品（数采\n                                                仪 6.0、用电量数采仪…..）。 <br/>\n                                            2、如果是 linux 版本为 2.6.0（新国标版本）， \n                                                字 节 序 相 对linux3.2.0来说需前后4字节整体对调。 \n                                                例如:<br/>\n                                                 linux3.2.0: decode15@12345678 等价于 linux2.6.0: decode15@56781234 \n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： 规则：decode15@12345678 ，源字节数组（HEX）： 40aa4875c28f5c29 ，解析结果：3364.23（即40aa4875c28f5c29-》40AA4875C28F5C29->3364.23）<br/>\n                                            注意： <br/>\n                                                linux3.2.0: decode15@12345678 等价于 linux2.6.0: decode15@56781234 \n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode16</td>\n                                        <td class="tabledataxuxian">16 进制字节数组转化为 16 进制字符串对应的浮点数；</td>\n                                        <td class="tabledataxuxian">\n                                            例 1： 规则：decode16 ，源字节数组（HEX）： 12 34 56 78 ，解析结果：12345678.0（即12 34 56 78-》12345678.0）；\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode17@ 010203040506 </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组按权重累加,@符号后传递的是指数，默认底数是 10。指数是 16 进制的，20 表示 32 <br/>\n                                            decode17@010203040506070F 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 15 次方 <br/>\n                                            decode17@-1-2-3-4-5-a 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 10 次方 <br/>\n                                            正数指数范围是 00 到 FF <br/>\n                                            负数指数范围是-0 到-F <br/>\n\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode17@01020304 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：12340.0 <br/>\n                                            例 2： <br/>\n                                                规则：decode17@-1-2-3-4 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：0.432100 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode18</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 3 字节数组转化为 16 进制字符串对应的 float 浮点数,小数点位置从报文读取 <br/>\n                                            第 1 字节标识小数点位置 第 2、3 字节标识有效数据 <br/>\n                                            第 1 字节的第 1 位为整数的符号位 <br/>\n                                            第 1 字节的第 2 位为小数点位，表示向左右移几位 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode18 <br/>\n                                                源字节数组（HEX）： 03 45 24 <br/>\n                                                解析结果：452.4.0 <br/>\n                                            例 2： <br/>\n                                                规则：decode18 <br/>\n                                                源字节数组（HEX）： 7E 45 24 <br/>\n                                                解析结果：0. 004524 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode19</td>\n                                        <td class="tabledataxuxian">\n                                            整数部分为16进制4字节数整形数据(字节序 1234), <br/>\n                                            小数部分为16 进制 4 字节浮点型数据（字节序 1234） <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： \n                                                规则：decode19 \n                                                源字节数组（HEX）： 00 00 49 1D 3C DE 5A 17 \n                                                解析结果：18717.027143\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode20</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 4 字节数组按权重累加，底数固定为 10， <br/>\n                                            Decode20 <br/>\n                                            源字节数组（HEX） X1 X2 X3 X4 <br/>\n                                            结果=X1 * 10^0 + X2*10^2 + X3*10^4 + X4 * 10 ^6 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode20 <br/>\n                                                源字节数组(HEX) 00 02 00 01 <br/>\n                                                解析结果： 1000200 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode21@/1000 </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 8 字节数组,前部分为 4字节整形数据（字节序 3412）加上后部分为四字节整形数据（字节序 3412） / （可配置为加减乘除）1000（可配置参数）的数值。 <br/>\n                                            decode21 不传任何参数和运算符，<br/>\n                                            或者传递的运算符非以上四种，<br/>\n                                            默认为解析结果为两个四字节整数相加，<br/>\n                                            如果要除以的参数为 0 时，默认为后半部分为 0，得到的结果是前四字节整数数据，<br/>\n                                            如果传递的参数为非数字，默认参数为 0，按以上规则进行运算 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode21@/1000 <br/>\n                                                源字节数组： <br/>\n                                                    00 02 00 01 02 40 00 00 <br/>\n                                                    00 02 00 01:65538 <br/>\n                                                    02 40 00 00:576 <br/>\n                                                参数：1000 <br/>\n                                                解析结果： 65538.576 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode22@H/100</td>\n                                        <td class="tabledataxuxian">\n                                            16 机制 2 字节数组，大写 H 代表解析数据 12，大写 L 解析顺序21， /表示操作符，也可以是+， -，*。 <br/>\n                                            100 表示要操作的参数，大写 H不写按照解析顺序 12 数据进行解析，<br/>\n                                            操作符不写，默认得到的数据为 2 字节解析得到的数值，<br/>\n                                            注意：如果除以的参数为 0，则得到的数据默认为 0 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例：\n                                                decode22@H/100 <br/>\n                                                源字节数组： 01 72 <br/>\n                                                    按照的解析顺序 12 得到的数值为 370； <br/>\n                                                最终得到的数值为 370/100 = 3.7 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode23@字节序;ADMin,ADMax;rangMin,rangeMax\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            2 字节整型数据表示 ADC 值， 根据量程上下限进行计算出实时数据：<br/>\n                                                参数格式： <br/>\n                                                    docode23@字节序; ADMin,ADMax; rangeMin,rangeMax  <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例如：  <br/>\n                                                decode23@12;0,65535;100,200  <br/>\n                                                源字节数组 10 20 <br/>\n                                                解析结果：106.2989  <br/>\n                                                解析结果公式：Y=（（rangeMax-rangeMin）*（X-ADMin））/(ADMax-ADMin)+rangeMin <br/>\n                                                其中X为（10 20 按照字节序12解析出的整数：1020-》4128） <br/>\n                                                Y = （（200-100）*（4128-0））/(65535-0)+100=412800/65535+100=106.2989242389563 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode24@字节序;ADMin,ADMax;rangMin,rangeMax\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            4 字节浮点数据表示 ADC 值， 根据量程上下限进行计算出实时数据： <br/>\n                                                参数格式： <br/>\n                                                    Decode24@字节序;ADMin,ADMax;rangeMin,rangeMax <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例如： <br/>\n                                                decode24@3412;0,40;0,4000 <br/>\n                                                源字节数组 00 00 41 a0 <br/>\n                                                解析结果：2000.0 <br/>\n                                                解析结果公式：Y=（（rangeMax-rangeMin）*（X-ADMin））/(ADMax-ADMin)+rangeMin <br/>\n                                                其中X为（ 00 00 41 a0 按照字节序3412解析出的整数：00 00 41 a0-》 41 a0 00 00 ->20.000000） <br/>\n                                                Y = （（4000-0）*（20-0））/(40-0)+0=80000/40+0=2000 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode25@ 010203040506 </td>\n                                        <td class="tabledataxuxian">\n                                            16进制字节数组对应的1字节字符串按权重累加,@符号后传递的是指数，默认底数是 10。指数是 16 进制的，20 表示 32 <br/>\n                                            decode25@010203040506070F 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 15 次方 <br/>\n                                            decode17@-1-2-3-4-5-a 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 10 次方 <br/>\n \n                                            正数指数范围是 00 到 FF <br/>\n                                            负数指数范围是-0 到-F <br/>\n\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode25@01020304 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：12340.0 <br/>\n \n                                            例 2： <br/>\n                                                规则：decode25@000A0B0C <br/>\n                                                源字节数组（HEX）： 10 20 30 40 <br/>\n                                                解析结果： 43200000000010.000000 <br/>\n \n                                            例 3： <br/>\n                                                规则：decode25@-1-2-3-4 <br/>\n                                                源字节数组（HEX）： 10 20 30 40 <br/>\n                                                解析结果： 1.234000 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                </table> \n                                <span>注意：该算法由算法库提供，当有不满足时，可适当进行扩展。</span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=100, null=True, verbose_name='数据解析算法（decodeType）')),
                ('config_collect_receive_pors_section_operator', models.CharField(blank=True, choices=[('+', '+'), ('-', '-'), ('*', '*'), ('/', '/')], default='*', help_text='无特殊需求写*即可', max_length=10, null=True, verbose_name='操作符（operator）')),
                ('config_collect_receive_pors_section_operand', models.CharField(blank=True, default='1', help_text='无特殊需求写1即可', max_length=100, null=True, verbose_name='操作数（operand）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('configcollectreceivepors', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigCollectReceivePors', verbose_name='依赖的参数&状态配置')),
            ],
            options={
                'verbose_name': '参数&状态配置之section',
                'verbose_name_plural': '参数&状态配置之section',
            },
        ),
        migrations.CreateModel(
            name='ConfigCollectSendCmd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_collect_send_id', models.CharField(blank=True, default='rtdCollect', help_text='可以为空，起到一个说明作用', max_length=100, null=True, verbose_name='下发指令ID（id）')),
                ('config_collect_send_format', models.CharField(blank=True, choices=[('HEX', '16进制'), ('ASCII', '字符串')], default='HEX', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">指令类型</th>\n                                        <th class="tabledataxuxian">类型说明</th>\n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HEX</td>\n                                        <td class="tabledataxuxian">十六进制格式</td>\n                                        <td class="tabledataxuxian">报文以HEX的形式发送</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">ASCII</td>\n                                        <td class="tabledataxuxian">字符串格式</td>\n                                        <td class="tabledataxuxian">报文以ASCII的形式发送</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='下发指令的类型（format）')),
                ('config_collect_send_cmd', models.TextField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>具体下发指令，例如："${ID}0375320002${MODBUS_L_CRC16}" ,其中中间部分指令内容0375320002根据需求而得</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">指令内容</th>\n                                        <th class="tabledataxuxian">含义说明</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${ID}</td>\n                                        <td class="tabledataxuxian">用宏表示设备ID，表示ID可以在别处配置；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">03</td>\n                                        <td class="tabledataxuxian">表示功能码，和需求说明的功能码一致；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">7532</td>\n                                        <td class="tabledataxuxian">表示寄存器起始地址，和需求说明的寄存器起始地址一致；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">0002</td>\n                                        <td class="tabledataxuxian">表示寄存器个数或长度，和需求说明的寄存器个数或长度一致；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${MODBUS_L_CRC16}</td>\n                                        <td class="tabledataxuxian">表示下发指令的CRC校验方式；</td>\n                                    </tr>\n                                </table> \n                                \n                                <span>"${}" 为一项宏，可选宏如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">宏名称</th>\n                                        <th class="tabledataxuxian">宏描述</th>\n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${ID}</td>\n                                        <td class="tabledataxuxian">设备ID，该字段取值为串口设备配置中的id配置中下划线之后的内容；</td>\n                                        <td class="tabledataxuxian">配置时直接写${ID}即可；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${CR}</td>\n                                        <td class="tabledataxuxian">回车，会在指令会用’\r’替换该宏；</td>\n                                        <td class="tabledataxuxian">直接配置${CR}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${LF}</td>\n                                        <td class="tabledataxuxian">换行，会在指令会用’\n’替换该宏；</td>\n                                        <td class="tabledataxuxian">直接配置${LF}，通常联合回车一起使用；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${MODBUS_L_CRC16}</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，低字节在前，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${MODBUS_L_CRC16}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${MODBUS_H_CRC16}</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，高字节在前，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${MODBUS_H_CRC16}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${HJ212_CRC}</td>\n                                        <td class="tabledataxuxian">HJ212国标校验，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${HJ212_CRC}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${HJ212_JG_CRC}</td>\n                                        <td class="tabledataxuxian">聚光校验，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${HJ212_JG_CRC}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${CHECK_SUM}</td>\n                                        <td class="tabledataxuxian">累加和校验，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${CHECK_SUM} ；</td>\n                                    </tr>\n                                </table> \n                                <span>注意：如有新的规则或者校验算法可在动态管控仪的算法库中实现相应的宏。 </span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=1000, null=True, verbose_name='具体下发指令（cmd）')),
                ('config_collect_send_acktype', models.CharField(blank=True, choices=[('NO_RULE', '没有规则'), ('HEAD_TAIL', '满足指定包头和包尾'), ('HEAD_LEN', '满足指定包头和长度'), ('LEN_ONLY', '满足指定长度'), ('TAIL_ONLY', '满足指定包尾'), ('CUSTOM_RULE', '定制规则'), ('NO_ACK', '不需要回复')], default='HEAD_LEN', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据的回复类型，根据下发指令格式确定报文的类型，可选值如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>\n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">NO_RULE</td>\n                                        <td class="tabledataxuxian">没有规则：取走buffer中已存在的所有数据；</td>\n                                        <td class="tabledataxuxian">\n                                            该规则代表的是前端仪器回复的数据包的类型；</br>\n                                            当配置无规则时，会用到以下的回复报文的分包间隔（ackGap）;\n                                        </td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HEAD_TAIL</td>\n                                        <td class="tabledataxuxian">满足指定包头和包尾的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HEAD_LEN</td>\n                                        <td class="tabledataxuxian">满足指定包头和长度的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">LEN_ONLY</td>\n                                        <td class="tabledataxuxian">满足指定长度的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">TAIL_ONLY</td>\n                                        <td class="tabledataxuxian">满足指定包尾的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">CUSTOM_RULE</td>\n                                        <td class="tabledataxuxian">定制规则，由上层定义匹配函数matchFunc；</td>\n                                        <td class="tabledataxuxian">定制规则目前不支持；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">NO_ACK</td>\n                                        <td class="tabledataxuxian">不需要回复；</td>\n                                        <td class="tabledataxuxian">该规则下，不处理串口数据，一般用在反控中；</td>\n                                    </tr>\n                                </table> \n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=50, null=True, verbose_name='数据的回复类型（ackType）')),
                ('config_collect_send_ackhead', models.CharField(blank=True, default='', help_text='支持宏定义，”${}”,</br>只有在R_HEAD_TAIL和R_HEAD_LEN这两种报文格式下才有意义，</br>其他为空即可。', max_length=100, null=True, verbose_name='回复数据的包头（ackHead）')),
                ('config_collect_send_acktail', models.CharField(blank=True, default='', help_text='也支持宏定义，</br>只有在R_HEAD_TAIL和R_TAIL_ONLY这两种报文格式下才有意义，</br>其他为空即可。', max_length=100, null=True, verbose_name='回复报文的包尾（ackTail）')),
                ('config_collect_send_acklen', models.CharField(blank=True, default='', help_text='只有在R_HEAD_LEN和R_LEN_ONLY这两种报文格式下才有意义，</br>其他为空即可。', max_length=100, null=True, verbose_name='报文的长度（ackLen）')),
                ('config_collect_send_ackgap', models.CharField(blank=True, default='', help_text='一般为空即可', max_length=100, null=True, verbose_name='回复报文的分包间隔（ackGap）')),
                ('config_collect_send_ackcheckmode', models.CharField(blank=True, choices=[('MODBUS_L_CRC16', 'Modbus crc16位校验(低字节在前)'), ('MODBUS_H_CRC16', 'Modbus crc16位校验(高字节在前)'), ('FIXED_MARK', '固定标识'), ('HJ212_CRC', '国标CRC校验'), ('HJ212_JG_CRC', '聚光CRC检验')], default='MODBUS_L_CRC16', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>回复报文的检验，用来判断报文的正确性，可选项如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MODBUS_L_CRC16</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，低字节在前；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MODBUS_H_CRC16</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，高字节在前；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">FIXED_MARK</td>\n                                        <td class="tabledataxuxian">固定标识，会在报文中查找固定的标识，固定标识配置在校验参数(ackCheckArg)中；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HJ212_CRC</td>\n                                        <td class="tabledataxuxian">国标CRC校验；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HJ212_JG_CRC</td>\n                                        <td class="tabledataxuxian">聚光CRC检验；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=50, null=True, verbose_name='回复报文的检验（ackCheckMode）')),
                ('config_collect_send_ackcheckarg', models.CharField(blank=True, default='', help_text='只有固定标识才有意义，一般为空。', max_length=100, null=True, verbose_name='校验参数（ackCheckArg）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '下发指令&回复指令配置（cmd）',
                'verbose_name_plural': '下发指令&回复指令配置（cmd）',
            },
        ),
        migrations.CreateModel(
            name='ConfigControlSendCmd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_control_send_id', models.CharField(blank=True, choices=[('zeroAndFull', '校零校满'), ('adjustTime', '校时'), ('immediateSample', '及时采样'), ('remoteQualityCtrl', '远程质控'), ('startTest', '仪器启动测试'), ('stopTest', '仪器停止测试'), ('autoCorrection', '仪器自动校准'), ('init', '仪器初始化'), ('checkStdSample', '仪器进行标样核查'), ('setMeasureMode', '仪器修改测量模式'), ('setMeasureInterval', '仪器修改周期测量间隔'), ('setAutoCorrectInterval', '仪器修改自动校准间隔'), ('setCheckStdSampleInterval', '仪器修改自动标样核查间隔'), ('setOneLevelPasswd', '修改一级密码'), ('setTwoLevelPasswd', '修改二级密码'), ('setThreeLevelPasswd', '修改三级密码'), ('zeroCorrectRange', '零点校准量程校准'), ('startClean', '启动清洗/反吹'), ('compareSample', '比对采样'), ('overproofSample', '超标留样'), ('setSampleCycle', '设置采样时间周期'), ('getSampleCycle', '提取采样时间周期'), ('getLastSampleTime', '提取出样时间'), ('getEquipmentId', '提取设备唯一标识'), ('getEquipmentTime', '提取现场机时间'), ('setEquipmentTime', '设置现场机时间'), ('setEquipmentParam', '设置现场机参数')], default='zeroAndFull', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>反控指令的ID，可取值如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">反控指令ID</th>\n                                        <th class="tabledataxuxian">反控指令名称</th>                                           \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">zeroAndFull</td>\n                                        <td class="tabledataxuxian">校零校满；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">adjustTime</td>\n                                        <td class="tabledataxuxian">校时；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">immediateSample</td>\n                                        <td class="tabledataxuxian">及时采样；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">remoteQualityCtrl</td>\n                                        <td class="tabledataxuxian">远程质控；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">startTest</td>\n                                        <td class="tabledataxuxian">仪器启动测试；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">stopTest</td>\n                                        <td class="tabledataxuxian">仪器停止测试；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">autoCorrection</td>\n                                        <td class="tabledataxuxian">仪器自动校准；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">init</td>\n                                        <td class="tabledataxuxian">仪器初始化；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">checkStdSample</td>\n                                        <td class="tabledataxuxian">仪器进行标样核查；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setMeasureMode</td>\n                                        <td class="tabledataxuxian">仪器修改测量模式；</td>\n                                    </tr>\n\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setMeasureInterval</td>\n                                        <td class="tabledataxuxian">仪器修改周期测量间隔；</td>\n                                    </tr>\n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setAutoCorrectInterval</td>\n                                        <td class="tabledataxuxian">仪器修改自动校准间隔；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setCheckStdSampleInterval</td>\n                                        <td class="tabledataxuxian">仪器修改自动标样核查间隔；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setOneLevelPasswd</td>\n                                        <td class="tabledataxuxian">修改一级密码；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setTwoLevelPasswd</td>\n                                        <td class="tabledataxuxian">修改二级密码；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setThreeLevelPasswd</td>\n                                        <td class="tabledataxuxian">修改三级密码；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">zeroCorrectRange</td>\n                                        <td class="tabledataxuxian">零点校准量程校准；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">startClean</td>\n                                        <td class="tabledataxuxian">启动清洗/反吹；</td>\n                                    </tr>\n\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">compareSample</td>\n                                        <td class="tabledataxuxian">比对采样；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">overproofSample</td>\n                                        <td class="tabledataxuxian">超标留样；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setSampleCycle</td>\n                                        <td class="tabledataxuxian">设置采样时间周期；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">getSampleCycle</td>\n                                        <td class="tabledataxuxian">提取采样时间周期；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">getLastSampleTime</td>\n                                        <td class="tabledataxuxian">提取出样时间；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">getEquipmentId</td>\n                                        <td class="tabledataxuxian">提取设备唯一标识；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">getEquipmentTime</td>\n                                        <td class="tabledataxuxian">提取现场机时间；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setEquipmentTime</td>\n                                        <td class="tabledataxuxian">设置现场机时间；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">setEquipmentParam</td>\n                                        <td class="tabledataxuxian">设置现场机参数；</td>\n                                    </tr>\n                                    \n                                </table> \n                                <span>注意：反控指令中的ID不能为空。</span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=50, null=True, verbose_name='反控指令的 ID（id）')),
                ('config_control_send_format', models.CharField(blank=True, choices=[('HEX', '16进制'), ('ASCII', '字符串')], default='HEX', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">指令类型</th>\n                                        <th class="tabledataxuxian">类型说明</th>\n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HEX</td>\n                                        <td class="tabledataxuxian">十六进制格式</td>\n                                        <td class="tabledataxuxian">报文以HEX的形式发送</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">ASCII</td>\n                                        <td class="tabledataxuxian">字符串格式</td>\n                                        <td class="tabledataxuxian">报文以ASCII的形式发送</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='命令类型（format）')),
                ('config_control_send_cmd', models.TextField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>具体下发指令，例如："${ID}050001FF00@{SYSTEMTIME}${MODBUS_L_CRC16}" ,其中中间部分指令内容050001FF00@{SYSTEMTIME}根据需求而得</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">指令内容</th>\n                                        <th class="tabledataxuxian">含义说明</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${ID}</td>\n                                        <td class="tabledataxuxian">用宏表示设备ID，表示ID可以在别处配置；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">05</td>\n                                        <td class="tabledataxuxian">表示功能码，和需求说明的功能码一致；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">0001</td>\n                                        <td class="tabledataxuxian">表示寄存器起始地址，和需求说明的寄存器起始地址一致；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">FF00</td>\n                                        <td class="tabledataxuxian">表示寄存器个数或长度，和需求说明的寄存器个数或长度一致；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">@{SYSTEMTIME}</td>\n                                        <td class="tabledataxuxian">@{参数名}为参数，该参数的值来源于上报程序，具体的处理方法见反控指令中的参数配置；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${MODBUS_L_CRC16}</td>\n                                        <td class="tabledataxuxian">表示下发指令的CRC校验方式；</td>\n                                    </tr>\n                                </table> \n                                \n                                <span>"${}" 为一项宏，可选宏如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">宏名称</th>\n                                        <th class="tabledataxuxian">宏描述</th>\n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${ID}</td>\n                                        <td class="tabledataxuxian">设备ID，该字段取值为串口设备配置中的id配置中下划线之后的内容；</td>\n                                        <td class="tabledataxuxian">配置时直接写${ID}即可；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${CR}</td>\n                                        <td class="tabledataxuxian">回车，会在指令会用’\r’替换该宏；</td>\n                                        <td class="tabledataxuxian">直接配置${CR}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${LF}</td>\n                                        <td class="tabledataxuxian">换行，会在指令会用’\n’替换该宏；</td>\n                                        <td class="tabledataxuxian">直接配置${LF}，通常联合回车一起使用；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${MODBUS_L_CRC16}</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，低字节在前，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${MODBUS_L_CRC16}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${MODBUS_H_CRC16}</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，高字节在前，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${MODBUS_H_CRC16}；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${HJ212_CRC}</td>\n                                        <td class="tabledataxuxian">HJ212国标校验，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${ HJ212_CRC }；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">${HJ212_JG_CRC}</td>\n                                        <td class="tabledataxuxian">聚光校验，用校验结果替换宏；</td>\n                                        <td class="tabledataxuxian">指令中直接写${ HJ212_JG_CRC }；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=1000, null=True, verbose_name='反控指令的配置（cmd）')),
                ('config_control_send_acktype', models.CharField(blank=True, choices=[('NO_RULE', '没有规则'), ('HEAD_TAIL', '满足指定包头和包尾'), ('HEAD_LEN', '满足指定包头和长度'), ('LEN_ONLY', '满足指定长度'), ('TAIL_ONLY', '满足指定包尾'), ('CUSTOM_RULE', '定制规则'), ('NO_ACK', '不需要回复')], default='NO_ACK', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据的回复类型，根据下发指令格式确定报文的类型，可选值如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>\n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">NO_RULE</td>\n                                        <td class="tabledataxuxian">没有规则：取走buffer中已存在的所有数据；</td>\n                                        <td class="tabledataxuxian">\n                                            该规则代表的是前端仪器回复的数据包的类型；</br>\n                                            当配置无规则时，会用到以下的回复报文的分包间隔（ackGap）;\n                                        </td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HEAD_TAIL</td>\n                                        <td class="tabledataxuxian">满足指定包头和包尾的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HEAD_LEN</td>\n                                        <td class="tabledataxuxian">满足指定包头和长度的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">LEN_ONLY</td>\n                                        <td class="tabledataxuxian">满足指定长度的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">TAIL_ONLY</td>\n                                        <td class="tabledataxuxian">满足指定包尾的数据帧；</td>\n                                        <td class="tabledataxuxian">该规则代表的是前端仪器回复的数据包的类型；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">CUSTOM_RULE</td>\n                                        <td class="tabledataxuxian">定制规则，由上层定义匹配函数matchFunc；</td>\n                                        <td class="tabledataxuxian">定制规则目前不支持；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">NO_ACK</td>\n                                        <td class="tabledataxuxian">不需要回复；</td>\n                                        <td class="tabledataxuxian">该规则下，不处理串口数据，一般用在反控中；</td>\n                                    </tr>\n                                </table> \n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=50, null=True, verbose_name='应答包格式（ackType）')),
                ('config_control_send_ackhead', models.CharField(blank=True, default='', help_text='支持宏定义，”${}”,</br>只有在R_HEAD_TAIL和R_HEAD_LEN这两种报文格式下才有意义，</br>其他为空即可。', max_length=100, null=True, verbose_name='回复数据的包头（ackHead）')),
                ('config_control_send_acktail', models.CharField(blank=True, default='', help_text='也支持宏定义，</br>只有在R_HEAD_TAIL和R_TAIL_ONLY这两种报文格式下才有意义，</br>其他为空即可。', max_length=100, null=True, verbose_name='回复报文的包尾（ackTail）')),
                ('config_control_send_acklen', models.CharField(blank=True, default='', help_text='只有在R_HEAD_LEN和R_LEN_ONLY这两种报文格式下才有意义，</br>其他为空即可。', max_length=100, null=True, verbose_name='回复报文的总长度（ackLen）')),
                ('config_control_send_ackgap', models.CharField(blank=True, default='', help_text='一般为空即可', max_length=100, null=True, verbose_name='回复报文的分包间隔（ackGap）')),
                ('config_control_send_ackcheckmode', models.CharField(blank=True, choices=[('MODBUS_L_CRC16', 'Modbus crc16位校验(低字节在前)'), ('MODBUS_H_CRC16', 'Modbus crc16位校验(高字节在前)'), ('FIXED_MARK', '固定标识'), ('HJ212_CRC', '国标CRC校验'), ('HJ212_JG_CRC', '聚光CRC检验')], default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>回复报文的检验，用来判断报文的正确性，可选项如下表：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MODBUS_L_CRC16</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，低字节在前；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MODBUS_H_CRC16</td>\n                                        <td class="tabledataxuxian">Modbus crc16位校验，高字节在前；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">FIXED_MARK</td>\n                                        <td class="tabledataxuxian">固定标识，会在报文中查找固定的标识，固定标识配置在校验参数(ackCheckArg)中；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HJ212_CRC</td>\n                                        <td class="tabledataxuxian">国标CRC校验；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">HJ212_JG_CRC</td>\n                                        <td class="tabledataxuxian">聚光CRC检验；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=50, null=True, verbose_name='回复报文的检验（ackCheckMode）')),
                ('config_control_send_ackcheckarg', models.CharField(blank=True, default='', help_text='只有固定标识才有意义，一般为空。', max_length=100, null=True, verbose_name='检验参数（ackCheckArg）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '反控指令配置（cmd）',
                'verbose_name_plural': '反控指令配置（cmd）',
            },
        ),
        migrations.CreateModel(
            name='ConfigControlSendParamid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_control_send_paramid', models.CharField(blank=True, default='', help_text="反控指令中的参数适用于平台反控前端仪器时有参数需要下发到前端仪器中，<br/>此时需要将参数处理并加入反控指令中。<br/>paramId='SYSTEMTIME' 参数名，跟上面定义的参数名(即@{}中的参数名)必须一致。", max_length=100, null=True, verbose_name='参数名（paramId）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('configcontrolsendcmd', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigControlSendCmd', verbose_name='依赖的反控下发指令')),
            ],
            options={
                'verbose_name': '反控指令_参数',
                'verbose_name_plural': '反控指令_参数',
            },
        ),
        migrations.CreateModel(
            name='ConfigControlSendPorsConvertrule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_control_send_pors_convertrule_ruletype', models.CharField(blank=True, choices=[('1', '枚举类型'), ('2', '小于最小值'), ('3', '大于最大值'), ('4', '最大值最小值之间')], default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>特殊规则类型，需要增加时以convertRule为单位进行增加，可增加多行，选择相应的类型时，对应的值才有意义，可选类型如下：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">类型</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">1</td>\n                                        <td class="tabledataxuxian">枚举类型；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">2</td>\n                                        <td class="tabledataxuxian">小于最小值；</td>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">3</td>\n                                        <td class="tabledataxuxian">大于最大值；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">4</td>\n                                        <td class="tabledataxuxian">最大值最小值之间；</td>\n                                    </tr>\n                                </table> \n                                <span>注意：当配置多个特殊转换规则时，只要有满足的规则，之后的规则将不再判断，无特殊配置直接去掉convertRule节点。</span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=2, null=True, verbose_name='特殊规则类型（ruleType）')),
                ('config_control_send_pors_convertrule_enumvalue', models.CharField(blank=True, default='', help_text='多个值之间用分号隔开，如：2;5;78,只针对特殊规则类型为1（即枚举类型），<br/>当取值为枚举值其中之一时，将resultValue的值存起来；', max_length=100, null=True, verbose_name='枚举值（enumValue）')),
                ('config_control_send_pors_convertrule_minvalue', models.CharField(blank=True, default='', help_text='针对特殊规则类型为2（即小于最小值类型）或特殊规则类型为4(即最大值最小值之间类型)，<br/>取值小于最小值时，将resultValue的之存起来；<br/>或者取值在最大值和最小值之间，将resultValue的值存起来；', max_length=100, null=True, verbose_name='最小值（minValue）')),
                ('config_control_send_pors_convertrule_maxvalue', models.CharField(blank=True, default='', help_text='针对特殊规则类型为3（即大于最大值类型）或特殊规则类型为4(即最大值最小值之间类型)，<br/>取值大于最大值时，将resultValue的值存起来；<br/>或者取值在最大值和最小值之间，将resultValue的值存起来；', max_length=100, null=True, verbose_name='最大值（maxValue）')),
                ('config_control_send_pors_convertrule_resultvalue', models.CharField(blank=True, default='', help_text='与设置的规则和数值相对应的值', max_length=100, null=True, verbose_name='最终保存的值（resultValue）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '反控指令_参数的处理（convertRule）',
                'verbose_name_plural': '反控指令_参数的处理（convertRule）',
            },
        ),
        migrations.CreateModel(
            name='ConfigControlSendPorsSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_control_send_pors_section_datatype', models.CharField(blank=True, choices=[('FLOAT', '浮点型'), ('INT', '整型')], default='FLOAT', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据类型，不写默认为INT,可选选项如下：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">类型</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">INT</td>\n                                        <td class="tabledataxuxian">将解析到的值以整形的形式存储成字符串；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">FLOAT</td>\n                                        <td class="tabledataxuxian">将解析到的值以浮点数的形式存储成字符串；</td>\n                                    </tr>\n                                </table> \n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='数据类型（dataType）')),
                ('config_control_send_pors_section_strformat', models.CharField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                                    为空时默认为\'%d\'或\'%f\',\n                                                    <br/>具体根据dataType（数据类型）决定，\n                                                    <br/>数据类型为INT时，则为\'%d\'；\n                                                    <br/>数据类型为FLOAT时，则为\'%f\'。\n                                                    <br/>注意：</br>\n                                                    1.对于时间的数据是整形时，需要加字节个数的限制，如%02d（限制2个字节）或%04d（限制4个字节） ,如果没有加限制，时间格式会出现数字不够的现象，例如：7月1号展示为71 ，但正确需展示应为0701；<br/>\n                                                    2.对于非时间的数据是整形时，一般不需要加字节个数的限制，否则会出现数据不对应的问题,例如： 2500 如果是%02d限制后为25，数据错误；</br>    \n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=100, null=True, verbose_name='数据转换为字符串的格式（strFormat）')),
                ('config_control_send_pors_section_findmode', models.CharField(blank=True, choices=[('OFFSET', '固定偏移'), ('MARK', '固定标识')], default='OFFSET', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>查找模式，有以下选项：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">名称</th>\n                                        <th class="tabledataxuxian">描述</th>                                        \n                                        <th class="tabledataxuxian">备注</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">OFFSET</td>\n                                        <td class="tabledataxuxian">固定偏移；</td>\n                                        <td class="tabledataxuxian">相对包头的偏移量；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">MARK</td>\n                                        <td class="tabledataxuxian">固定标识；</td>\n                                         <td class="tabledataxuxian">所有的固定标识不能有包含与被包含的关系，否则没法解析；</td>\n                                    </tr>\n                                </table> \n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=10, null=True, verbose_name='查找模式（findMode）')),
                ('config_control_send_pors_section_offset', models.CharField(blank=True, default='', help_text='相对包头的，只针对固定偏移模式；', max_length=100, null=True, verbose_name='偏移量（offset）')),
                ('config_control_send_pors_section_mark', models.CharField(blank=True, default='', help_text='只针对固定标识模式；', max_length=100, null=True, verbose_name='固定标识（mark）')),
                ('config_control_send_pors_section_len', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='解析的宽度（len）')),
                ('config_control_send_pors_section_decodetype', models.CharField(blank=True, default='', help_text='\n                        <!DOCTYPE html> \n                        <html> \n                            <head> \n                                <meta charset="utf-8" /> \n                                <title>html边框虚线演示</title> \n                                <style> \n                                    .tabledata{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px solid #F00;\n\t                                    }\n\t                                .tabledataxuxian{\n\t                                    background: rgba(251, 251, 251, 0.93);\n\t                                    margin: 0;  /* 上 右 下 左 */\n\t                                    border:1px dashed #F00;\n\t                                    }\n                                </style> \n                                <script language="javascript">\n                                    function show_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n                                    }\n                                    function hide_div(){\n                                    var obj_div_s=document.getElementsByClassName("starlist");\n                                    for (var i=0,obj_div;obj_div=obj_div_s[i];i++){\n                                            obj_div.style.display=(obj_div.style.display==\'none\')?\'block\':\'none\';\n                                        }\n\n                                    }\n                                </script>\n                            </head> \n                            <body> \n                                <a href="javascript:hide_div()" >字段详情说明</a>\n                                <div class="starlist">\n    \n                                <span>数据解析算法，有时须与解析宽度配合使用，有以下选项：</span>\n                                <table class="tabledata"> \n                                    <tr class="tabledataxuxian">\n                                        <th class="tabledataxuxian">算法代码</th>\n                                        <th class="tabledataxuxian">算法描述</th>                                        \n                                        <th class="tabledataxuxian">举例</th>\n                                    </tr>\n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode1</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(小端)转换成一个float型数值4321；</td>\n                                        <td class="tabledataxuxian">4855D045-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode2</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(大端)转换成一个float型数值1234；</td>\n                                         <td class="tabledataxuxian">45D05548-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode3</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(小端)转换成一个float型数值2143；</td>\n                                        <td class="tabledataxuxian">D0454855-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode4</td>\n                                        <td class="tabledataxuxian">将IEEE745格式的四字节数据(大端)转换成一个float型数值3412；</td>\n                                         <td class="tabledataxuxian">554845D0-》45D05548->6666.66；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode5</td>\n                                        <td class="tabledataxuxian">字符串转换成浮点数；</td>\n                                        <td class="tabledataxuxian">“12345.3”-》 12345.3；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode6</td>\n                                        <td class="tabledataxuxian">字符串转换成整形转换宽度由上面len决定,如len=2；</td>\n                                         <td class="tabledataxuxian">len=2 &nbsp; “12345.63”-》 12</br>len=7 &nbsp; “12345.63”-》 12345</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode7@字节序</br>不传递字节序时，默认为12</td>\n                                        <td class="tabledataxuxian">\n                                            字符数组转换成短整型</br>\n                                            decode7、decode7@12、decode7@21等算法默认解析出的结果是有符号数</br>\n                                            如果现场特殊，需要解析无符号数，可按照如下方式配置：decode7@u12、decode7@u21;\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode7@12</br>\n                                            源字节数组(HEX)：31 32</br>\n                                            解析结果：12594；\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode8</td>\n                                        <td class="tabledataxuxian">将一个字符的十六进制直接转换成对应的十进制；</td>\n                                         <td class="tabledataxuxian">0x0a-》10；</td>\n                                    </tr>\n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode9@bitn</br>n为比特位数</td>\n                                        <td class="tabledataxuxian">\n                                            取对应字节的比特位，返回0或者1<br/>\n                                            @后面为参数格式为：@bitn<br/>\n                                            支持解析多位比特位，格式为：<br/>\n                                            decode9@bitEnd-bitStart,比如 decode9@bit1-bit0 \n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                deocde9@bit3 <br/>\n                                                0x04-》1 <br/>\n                                                0x03-》0 <br/>\n                                            例 2: <br/>\n                                                decode9@bit1-bit0 <br/>\n                                                0x01-》1 <br/>\n                                                0x02-》2 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode10  @字节序 <br/>\n                                            不传递字节序时，默认为 1234 \n                                        </td>\n                                        <td class="tabledataxuxian">将十六进制字符串直接转换成4字节浮点数（可配置顺序）；</td>\n                                         <td class="tabledataxuxian">\n                                            规则：decode10@1234 <br/>\n                                            源字符串(ASCII)： <br/>\n                                            449a4000 <br/>\n                                            解析结果：1234.0 <br/>\n                                         </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode11 @字节序 <br/>\n                                            不传递字节序时，默认为 12\n                                        </td>\n                                        <td class="tabledataxuxian">将十六进制字符串直接转换成2字节短整型（可配置顺序）；</td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode11@12 <br/>\n                                            源字符串(ASCII)：449a <br/>\n                                            解析结果：17562 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode12 @字节序 <br/>\n                                            不传递字节序时，默认为 1234 \n                                        </td>\n                                        <td class="tabledataxuxian">将IEEF745格式的4字节数据转成一个float型数值（可配置顺序）；</td>\n                                        <td class="tabledataxuxian">\n                                            规则：decode12@4312 <br/>\n                                            源字节数组（HEX）：40 00 9a 44 <br/>\n                                            解析结果：1234.0\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode13@u 字节序 <br/> \n                                            decode13@s 字节序\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 4 字节整型数据；<br/>\n                                            u 代表无符号数；<br/>\n                                            s 代表有符号数；<br/>\n                                            注：配置时必须指明符号类型，如果不明确是什么符号类型，请使用 s ；\n                                        </td>\n                                        <td class="tabledataxuxian"> \n                                                例 1： 规则：decode13@u1234 ，源字节数组（HEX）：45 1C 30 2F ，解析结果：1159475247（即45 1C 30 2F-》451C302F->1159475247）；<br/>\n                                                例 2： 规则：decode13@s3412 ，源字节数组（HEX）：ff 0b ff ff ，解析结果:-245 （即ff 0b ff ff-》FFFFFF0B->-245）；<br/>\n                                                例 3： 规则：decode13@u3412 ，源字节数组（HEX）：ff 0b ff ff ，解析结果: 4294967051（即ff 0b ff ff-》FFFFFF0B->4294967051；<br/>\n                                                注：对比例 2 和例 3 可观察有符号和无符号的解析差别；</td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode14@u 字节序 <br/>\n                                            decode14@s 字节序\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 4 字节整型数据；<br/>\n                                            u 代表无符号数；<br/>\n                                            s 代表有符号数；<br/>\n                                            注：配置时必须指明符号类型，如果不明确是什么符号类型，请使用 s ；</td>\n                                         <td class="tabledataxuxian">                                                \n                                                例 1： 规则：decode14@u1234 ，源字节数组（ASCII）：45 1C 30 2F ，解析结果：1159475247（即45 1C 30 2F-》451C302F->1159475247）；<br/>\n                                                例 2： 规则：decode14@s3412 ，源字节数组（ASCII）：ff 0b ff ff ，解析结果:-245 （即ff 0b ff ff-》FFFFFF0B->-245）；<br/>\n                                                例 3： 规则：decode14@u3412 ，源字节数组（ASCII）：ff 0b ff ff ，解析结果: 4294967051（即ff 0b ff ff-》FFFFFF0B->4294967051；<br/>\n                                                注：对比例 2 和例 3 可观察有符号和无符号的解析差别；</td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode15@字节序</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组转化为 8 字节有符号浮点数<br/>\n                                            注意： <br/>\n                                            1、本算法针对 linux 版本为 3.2.0及其以上版本，\n                                                涉及的产品包括动态管控仪及其衍生产品（数采\n                                                仪 6.0、用电量数采仪…..）。 <br/>\n                                            2、如果是 linux 版本为 2.6.0（新国标版本）， \n                                                字 节 序 相 对linux3.2.0来说需前后4字节整体对调。 \n                                                例如:<br/>\n                                                 linux3.2.0: decode15@12345678 等价于 linux2.6.0: decode15@56781234 \n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： 规则：decode15@12345678 ，源字节数组（HEX）： 40aa4875c28f5c29 ，解析结果：3364.23（即40aa4875c28f5c29-》40AA4875C28F5C29->3364.23）<br/>\n                                            注意： <br/>\n                                                linux3.2.0: decode15@12345678 等价于 linux2.6.0: decode15@56781234 \n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode16</td>\n                                        <td class="tabledataxuxian">16 进制字节数组转化为 16 进制字符串对应的浮点数；</td>\n                                        <td class="tabledataxuxian">\n                                            例 1： 规则：decode16 ，源字节数组（HEX）： 12 34 56 78 ，解析结果：12345678.0（即12 34 56 78-》12345678.0）；\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode17@ 010203040506 </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制字节数组按权重累加,@符号后传递的是指数，默认底数是 10。指数是 16 进制的，20 表示 32 <br/>\n                                            decode17@010203040506070F 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 15 次方 <br/>\n                                            decode17@-1-2-3-4-5-a 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 10 次方 <br/>\n                                            正数指数范围是 00 到 FF <br/>\n                                            负数指数范围是-0 到-F <br/>\n\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode17@01020304 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：12340.0 <br/>\n                                            例 2： <br/>\n                                                规则：decode17@-1-2-3-4 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：0.432100 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode18</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 3 字节数组转化为 16 进制字符串对应的 float 浮点数,小数点位置从报文读取 <br/>\n                                            第 1 字节标识小数点位置 第 2、3 字节标识有效数据 <br/>\n                                            第 1 字节的第 1 位为整数的符号位 <br/>\n                                            第 1 字节的第 2 位为小数点位，表示向左右移几位 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode18 <br/>\n                                                源字节数组（HEX）： 03 45 24 <br/>\n                                                解析结果：452.4.0 <br/>\n                                            例 2： <br/>\n                                                规则：decode18 <br/>\n                                                源字节数组（HEX）： 7E 45 24 <br/>\n                                                解析结果：0. 004524 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode19</td>\n                                        <td class="tabledataxuxian">\n                                            整数部分为16进制4字节数整形数据(字节序 1234), <br/>\n                                            小数部分为16 进制 4 字节浮点型数据（字节序 1234） <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： \n                                                规则：decode19 \n                                                源字节数组（HEX）： 00 00 49 1D 3C DE 5A 17 \n                                                解析结果：18717.027143\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode20</td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 4 字节数组按权重累加，底数固定为 10， <br/>\n                                            Decode20 <br/>\n                                            源字节数组（HEX） X1 X2 X3 X4 <br/>\n                                            结果=X1 * 10^0 + X2*10^2 + X3*10^4 + X4 * 10 ^6 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode20 <br/>\n                                                源字节数组(HEX) 00 02 00 01 <br/>\n                                                解析结果： 1000200 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode21@/1000 </td>\n                                        <td class="tabledataxuxian">\n                                            16 进制 8 字节数组,前部分为 4字节整形数据（字节序 3412）加上后部分为四字节整形数据（字节序 3412） / （可配置为加减乘除）1000（可配置参数）的数值。 <br/>\n                                            decode21 不传任何参数和运算符，<br/>\n                                            或者传递的运算符非以上四种，<br/>\n                                            默认为解析结果为两个四字节整数相加，<br/>\n                                            如果要除以的参数为 0 时，默认为后半部分为 0，得到的结果是前四字节整数数据，<br/>\n                                            如果传递的参数为非数字，默认参数为 0，按以上规则进行运算 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode21@/1000 <br/>\n                                                源字节数组： <br/>\n                                                    00 02 00 01 02 40 00 00 <br/>\n                                                    00 02 00 01:65538 <br/>\n                                                    02 40 00 00:576 <br/>\n                                                参数：1000 <br/>\n                                                解析结果： 65538.576 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode22@H/100</td>\n                                        <td class="tabledataxuxian">\n                                            16 机制 2 字节数组，大写 H 代表解析数据 12，大写 L 解析顺序21， /表示操作符，也可以是+， -，*。 <br/>\n                                            100 表示要操作的参数，大写 H不写按照解析顺序 12 数据进行解析，<br/>\n                                            操作符不写，默认得到的数据为 2 字节解析得到的数值，<br/>\n                                            注意：如果除以的参数为 0，则得到的数据默认为 0 <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例：\n                                                decode22@H/100 <br/>\n                                                源字节数组： 01 72 <br/>\n                                                    按照的解析顺序 12 得到的数值为 370； <br/>\n                                                最终得到的数值为 370/100 = 3.7 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode23@字节序;ADMin,ADMax;rangMin,rangeMax\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            2 字节整型数据表示 ADC 值， 根据量程上下限进行计算出实时数据：<br/>\n                                                参数格式： <br/>\n                                                    docode23@字节序; ADMin,ADMax; rangeMin,rangeMax  <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例如：  <br/>\n                                                decode23@12;0,65535;100,200  <br/>\n                                                源字节数组 10 20 <br/>\n                                                解析结果：106.2989  <br/>\n                                                解析结果公式：Y=（（rangeMax-rangeMin）*（X-ADMin））/(ADMax-ADMin)+rangeMin <br/>\n                                                其中X为（10 20 按照字节序12解析出的整数：1020-》4128） <br/>\n                                                Y = （（200-100）*（4128-0））/(65535-0)+100=412800/65535+100=106.2989242389563 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                    <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">\n                                            decode24@字节序;ADMin,ADMax;rangMin,rangeMax\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            4 字节浮点数据表示 ADC 值， 根据量程上下限进行计算出实时数据： <br/>\n                                                参数格式： <br/>\n                                                    Decode24@字节序;ADMin,ADMax;rangeMin,rangeMax <br/>\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例如： <br/>\n                                                decode24@3412;0,40;0,4000 <br/>\n                                                源字节数组 00 00 41 a0 <br/>\n                                                解析结果：2000.0 <br/>\n                                                解析结果公式：Y=（（rangeMax-rangeMin）*（X-ADMin））/(ADMax-ADMin)+rangeMin <br/>\n                                                其中X为（ 00 00 41 a0 按照字节序3412解析出的整数：00 00 41 a0-》 41 a0 00 00 ->20.000000） <br/>\n                                                Y = （（4000-0）*（20-0））/(40-0)+0=80000/40+0=2000 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                     <tr class="tabledataxuxian">\n                                        <td class="tabledataxuxian">decode25@ 010203040506 </td>\n                                        <td class="tabledataxuxian">\n                                            16进制字节数组对应的1字节字符串按权重累加,@符号后传递的是指数，默认底数是 10。指数是 16 进制的，20 表示 32 <br/>\n                                            decode25@010203040506070F 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 15 次方 <br/>\n                                            decode17@-1-2-3-4-5-a 代表 <br/>\n                                                x1*10 的 1 次方 + <br/>\n                                                x2*10 的 2 次方 + <br/>\n                                                x3*10 的 3 次方 + <br/>\n                                                x4*10 的 4 次方 + <br/>\n                                                x5*10 的 5 次方 + <br/>\n                                                x6*10 的 6 次方 + <br/>\n                                                x7*10 的 10 次方 <br/>\n \n                                            正数指数范围是 00 到 FF <br/>\n                                            负数指数范围是-0 到-F <br/>\n\n                                        </td>\n                                        <td class="tabledataxuxian">\n                                            例 1： <br/>\n                                                规则：decode25@01020304 <br/>\n                                                源字节数组（HEX）： 04 03 02 01 <br/>\n                                                解析结果：12340.0 <br/>\n \n                                            例 2： <br/>\n                                                规则：decode25@000A0B0C <br/>\n                                                源字节数组（HEX）： 10 20 30 40 <br/>\n                                                解析结果： 43200000000010.000000 <br/>\n \n                                            例 3： <br/>\n                                                规则：decode25@-1-2-3-4 <br/>\n                                                源字节数组（HEX）： 10 20 30 40 <br/>\n                                                解析结果： 1.234000 <br/>\n                                        </td>\n                                    </tr>\n                                    \n                                </table> \n                                <span>注意：该算法由算法库提供，当有不满足时，可适当进行扩展。</span>\n\n    \n                                </div>\n                                </body> \n                        </html>\n    ', max_length=100, null=True, verbose_name='数据解析算法（decodeType）')),
                ('config_control_send_pors_section_operator', models.CharField(blank=True, choices=[('+', '+'), ('-', '-'), ('*', '*'), ('/', '/')], default='*', help_text='无特殊需求写*即可', max_length=10, null=True, verbose_name='操作符（operator）')),
                ('config_control_send_pors_section_operand', models.CharField(blank=True, default='1', help_text='无特殊需求写1即可', max_length=100, null=True, verbose_name='操作数（operand）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('configcontrolsendparamid', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigControlSendParamid', verbose_name='依赖的反控指令_参数')),
            ],
            options={
                'verbose_name': '反控指令_参数的处理（section）',
                'verbose_name_plural': '反控指令_参数的处理（section）',
            },
        ),
        migrations.CreateModel(
            name='FtpUploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up_remote_file', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='远程路径文件')),
                ('up_local_file', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='本地路径文件')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': 'FTP上传文件',
                'verbose_name_plural': 'FTP上传文件',
            },
        ),
        migrations.CreateModel(
            name='FtpUploadFileOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up_remote_file', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='远程路径文件')),
                ('up_local_file', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='本地路径文件')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': 'FTP上传文件',
                'verbose_name_plural': 'FTP上传文件',
            },
        ),
        migrations.CreateModel(
            name='GuideHelp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guide_project', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='指导文件名称')),
                ('guide_file', models.FileField(blank=True, null=True, upload_to=shucaiyidate.modelsguide.upload_guide_file_path, verbose_name='上传指导文件')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='上传人员')),
            ],
            options={
                'verbose_name': '使用指导文档',
                'verbose_name_plural': '使用指导文档',
            },
        ),
        migrations.CreateModel(
            name='NodeConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_project', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='项目名称')),
                ('config_file_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='文件名称')),
                ('config_xieyi_num', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='协议编号')),
                ('config_xieyi_type', models.CharField(blank=True, choices=[('HEX', '16进制'), ('ASCII', '字符串')], default='HEX', max_length=10, null=True, verbose_name='协议类型')),
                ('config_version', models.CharField(blank=True, default='', help_text=' 每次修改配置都需要更新，一般取配置日期作为版本号,例如：v20180423', max_length=100, null=True, verbose_name='版本号配置（version）')),
                ('config_device', models.CharField(blank=True, default='', help_text='一般取仪器的名称，例如：雪迪龙U23分析仪', max_length=100, null=True, verbose_name='设备型号配置（deviceModel）')),
                ('config_collect_packet_len', models.CharField(blank=True, default='', help_text='前端仪器回复包的最大长度，如果不写默认1024', max_length=100, null=True, verbose_name='采集指令配置_应答包长度配置（ackPacketMaxLen）')),
                ('local_file', models.FileField(blank=True, null=True, upload_to=shucaiyidate.modelsnewdev.upload_local_file_path, verbose_name='上传的原dev文件')),
                ('dev_file', models.FileField(blank=True, null=True, upload_to=shucaiyidate.modelsnewdev.upload_dev_file_path, verbose_name='生成的dev文件')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': 'Dev配置',
                'verbose_name_plural': 'Dev配置',
            },
        ),
        migrations.CreateModel(
            name='RecriminatDataOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_wait_time', models.CharField(default='0', max_length=1000, verbose_name='发送指令前等待时间（单位秒）')),
                ('com_send_date', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='反控指令内容')),
                ('com_expect_date', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='反控响应内容')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '协议测试之反控测试数据',
                'verbose_name_plural': '协议测试之反控测试数据',
            },
        ),
        migrations.CreateModel(
            name='RestartXieYiCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restart_command', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='关闭协议命令')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '重启协议命令',
                'verbose_name_plural': '重启协议命令',
            },
        ),
        migrations.CreateModel(
            name='RestartXieYiCommandOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restart_command', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='关闭协议命令')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '重启协议命令',
                'verbose_name_plural': '重启协议命令',
            },
        ),
        migrations.CreateModel(
            name='SenderHexData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_hex_data', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='发送数据命令')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '发送数据命令',
                'verbose_name_plural': '发送数据命令',
            },
        ),
        migrations.CreateModel(
            name='SenderHexDataOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_send_hex', models.BooleanField(default=True, help_text='选中则表示发送的数据为16进制，否则表示发送的数据为ASCII字符', verbose_name='发送的数据是否为16进制')),
                ('send_wait_time', models.CharField(default='0', max_length=1000, verbose_name='发送数据前等待时间（单位秒）')),
                ('com_send_date', models.CharField(default='01 03 02 00 EA 39 CB', help_text='回复指令中的全部内容，如回复的全部数据为：01 03 02 00 EA 39 CB，则此处填写01 03 02 00 EA 39 CB；', max_length=2000, verbose_name='回复指令中的全部内容')),
                ('is_need_expect', models.BooleanField(default=False, verbose_name='发送数据前是否需要先接收到指令')),
                ('is_need_after_expect', models.BooleanField(default=False, verbose_name='发送数据后是否需要接收到指令')),
                ('is_just_one', models.BooleanField(default=True, verbose_name='是否只发送一次数据')),
                ('is_receive_hex', models.BooleanField(default=True, help_text='选中则表示接收的数据为16进制，否则表示接收的数据为ASCII字符', verbose_name='接收的数据是否为16进制')),
                ('com_expect_date', models.CharField(blank=True, default='01 03 12 2D 00 01 11 7B', help_text='预期接收到的指令的内容，如预期接收到的指令的内容为：01 03 12 2D 00 01 11 7B，则此处填写01 03 12 2D 00 01 11 7B', max_length=2000, null=True, verbose_name='预期接收到的指令的内容')),
                ('is_assert_expect', models.BooleanField(default=True, verbose_name='是否断言预期结果')),
                ('xieyi_jiexi_expect_result', models.CharField(blank=True, default='0.234', help_text='协议解析预期结果，如预期结果为0.234，则此处填写0.234；如需多个预期值，则多个预期值之间以半角逗号隔开，例如：0.234,0.506', max_length=2000, null=True, verbose_name='协议解析预期结果')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '协议测试之测试数据',
                'verbose_name_plural': '协议测试之测试数据',
            },
        ),
        migrations.CreateModel(
            name='TagAttrib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_value_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='节点属性名字')),
                ('tag_value_text', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='节点属性值')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '节点属性',
                'verbose_name_plural': '节点属性',
            },
        ),
        migrations.CreateModel(
            name='TagContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_project', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='项目名称')),
                ('tag_level', models.CharField(blank=True, default='', help_text='节点层数，根目录层数为1，根目录下层数为2，依次往下为3、4、5等等', max_length=100, null=True, verbose_name='节点层数')),
                ('tag_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='节点名字')),
                ('is_root', models.BooleanField(default=False, verbose_name='是否根节点')),
                ('tag_text', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='节点文本内容')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('tag_father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.TagContent', verbose_name='依赖的父节点')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '节点配置',
                'verbose_name_plural': '节点配置',
            },
        ),
        migrations.CreateModel(
            name='VSixXieYiDuiZhao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('v6_xiyihao', models.CharField(default='', max_length=100, verbose_name='协议号')),
                ('v6_jianceleixing', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='监测类型')),
                ('v6_yiqifenlei', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='仪器分类')),
                ('v6_zhenglihouxieyimingcheng', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='整理后协议名称')),
                ('v6_yuanxieyimingcheng', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='原协议名称')),
                ('v6_syybxydcjyqxh', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='适用于本协议的厂家仪器型号')),
                ('v6_status', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='状态')),
                ('v6_yuanshucaiyiduiyingxieyihao', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='原数采仪对应协议号')),
                ('v6_shujuzhiling', models.TextField(blank=True, default='', max_length=1500, null=True, verbose_name='数据指令')),
                ('v6_zhuangtaicanshuzhiling', models.TextField(blank=True, default='', max_length=1500, null=True, verbose_name='状态参数指令')),
                ('v6_chuchangshengjibao', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='出厂升级包')),
                ('v6_shifoucaijizhuangtai', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='是否采集状态')),
                ('v6_yijifenlei', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='一级分类')),
                ('v6_shiyongquyu', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='使用区域')),
                ('v6_jiekouleixing', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='接口类型')),
                ('v6_chengxuleixing', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='程序类型')),
                ('v6_kaifaren', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='开发人')),
                ('v6_ceshiren', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='测试人')),
                ('v6_xiugaineirong', models.TextField(blank=True, default='', max_length=1500, null=True, verbose_name='修改内容')),
                ('v6_erjinzhimingcheng', models.TextField(blank=True, default='', max_length=500, null=True, verbose_name='二进制名称')),
                ('v6_teshupeizhiwenjian', models.TextField(blank=True, default='', max_length=1500, null=True, verbose_name='特殊配置文件')),
                ('v6_guidangshijian', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='归档时间')),
                ('v6_guidangren', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='归档人')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '采集协议V6对照表',
                'verbose_name_plural': '采集协议V6对照表',
            },
        ),
        migrations.CreateModel(
            name='XieyiConfigDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_project', models.CharField(default='', max_length=100, verbose_name='测试项目')),
                ('test_module', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='测试模块')),
                ('test_page', models.CharField(default='', max_length=100, verbose_name='测试页面')),
                ('case_priority', models.CharField(blank=True, choices=[('P0', '冒烟用例'), ('P1', '系统的重要功能用例'), ('P2', '系统的一般功能用例'), ('P3', '极低级别的用例')], default='P1', max_length=10, null=True, verbose_name='用例优先级')),
                ('test_case_title', models.CharField(default='', max_length=200, verbose_name='测试内容的名称')),
                ('is_run_case', models.BooleanField(default=True, verbose_name='是否运行')),
                ('telnet_host_ip', models.CharField(default='192.168.101.133', max_length=100, verbose_name='数采仪IP地址')),
                ('telnet_username', models.CharField(default='root', max_length=100, verbose_name='登录数采仪的用户名')),
                ('telnet_password', models.CharField(default='wwyc8888', max_length=100, verbose_name='登录数采仪的密码')),
                ('is_ftp_upload', models.BooleanField(default=False, verbose_name='是否上传配置文件')),
                ('is_close_xieyi', models.BooleanField(default=False, verbose_name='是否关闭开机自启动时启动的协议')),
                ('is_restart_xieyi', models.BooleanField(default=False, verbose_name='是否重新启动协议')),
                ('xieyi_bin_dir', models.CharField(default='/usr/app_install/collect/bin', max_length=100, verbose_name='数采仪存放协议二进制文件的bin目录')),
                ('xieyi_name', models.CharField(default='11020', max_length=100, verbose_name='协议二进制文件的名字')),
                ('xieyi_test_port', models.CharField(default='4', help_text='请填写数字，例如串口为COM4，则填写4', max_length=100, verbose_name='数采仪协议串口号')),
                ('is_com_recive_and_send', models.BooleanField(default=False, verbose_name='是否进行数据接收和发送')),
                ('com_port', models.CharField(default='COM3', help_text='电脑与数采仪连接的USB口，例如USB口为COM4，则填写COM4', max_length=100, verbose_name='电脑与数采仪连接的USB口')),
                ('com_baudrate', models.CharField(default='9600', help_text='协议波特率，一般有4800/9600/19200/38400bps，如协议使用波特率为9600bps，则此处填写9600', max_length=100, verbose_name='协议波特率')),
                ('com_bytesize', models.CharField(default='8', help_text='协议数据位，一般有6、7、8，如协议使用数据位为8，则此处填写8', max_length=100, verbose_name='协议数据位')),
                ('com_parity', models.CharField(default='N', help_text='协议校验位，一般有N(无校验)、O（奇校验）、E（偶校验）0、1，若协议使用无校验，则此处填写大写的N；若协议使用奇校验，则此处填写大写的O；若协议使用偶校验，则此处填写大写的E；', max_length=100, verbose_name='协议校验位')),
                ('com_stopbits', models.CharField(default='1', help_text='协议停止位，一般有1、1.5、2，如协议使用停止位为1，则此处填写1', max_length=100, verbose_name='协议停止位')),
                ('com_send_date', models.CharField(default='01 03 02 00 EA 39 CB', help_text='回复指令中的全部内容，如回复的全部数据为：01 03 02 00 EA 39 CB，则此处填写01 03 02 00 EA 39 CB；如需要发送多条指令，则每条指令之间以半角逗号隔开，', max_length=1000, verbose_name='回复指令中的全部内容')),
                ('com_expect_date', models.CharField(default='01 03 12 2D 00 01 11 7B', help_text='预期接收到的指令的内容，如预期接收到的指令的内容为：01 03 12 2D 00 01 11 7B，则此处填写01 03 12 2D 00 01 11 7B', max_length=100, verbose_name='预期接收到的指令的内容')),
                ('is_ftp_down_xieyi_file', models.BooleanField(default=False, verbose_name='是否ftp下载获取解析文件')),
                ('is_assert_file_success', models.BooleanField(default=False, verbose_name='是否断言协议预期解析结果在协议解析文件中')),
                ('xieyi_jiexi_expect_result', models.CharField(default='0.234', help_text='协议解析预期结果，如预期结果为0.234，则此处填写0.234，如有多个预期结果，每个结果之间以半角逗号隔开，如:0.234,9.55', max_length=1000, verbose_name='协议解析预期结果')),
                ('is_ftp_get_remote_db_file', models.BooleanField(default=False, verbose_name='是否ftp下载远程数据库文件')),
                ('is_assert_real_db_success', models.BooleanField(default=False, verbose_name='是否断言协议预期解析结果在实时数据库的表中')),
                ('xieyi_db', models.CharField(default='real.db', max_length=100, verbose_name='协议实时数据存放的数据库名字')),
                ('xieyi_db_remote_path', models.CharField(default='/tmp/real.db', help_text="如数据库路径为'/tmp/real.db',则填写'/tmp/real.db'", max_length=100, verbose_name='协议实时数据存放的数据库在数采仪中的路径')),
                ('xieyi_db_table_name', models.CharField(default='rttable', max_length=100, verbose_name='协议实时数据存放的数据的数据表')),
                ('is_tcp_server_receive', models.BooleanField(default=False, verbose_name='是否接收平台报文')),
                ('is_assert_tcp_server_receive_success', models.BooleanField(default=False, verbose_name='是否断言协议预期解析结果在接收的报文中')),
                ('tcp_server_ip', models.CharField(default='192.168.101.123', max_length=100, verbose_name='数据上报平台的IP地址')),
                ('tcp_server_port', models.CharField(default='63503', max_length=100, verbose_name='数据上报平台的端口号')),
                ('case_counts', models.IntegerField(default='1', help_text='循环次数，请填写数字，例如：1、2、3', verbose_name='循环次数')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '协议测试用例',
                'verbose_name_plural': '协议测试用例',
            },
        ),
        migrations.CreateModel(
            name='XieyiConfigDateOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_project', models.CharField(default='', max_length=100, verbose_name='配置名称')),
                ('web_type', models.CharField(blank=True, choices=[('P3', 'E4'), ('P0', 'V5.0'), ('P2', 'V5.1'), ('P1', 'V6.0')], default='P0', max_length=10, null=True, verbose_name='系统类型')),
                ('is_web_modify_xieyi', models.BooleanField(default=False, verbose_name='是否通过web端修改协议')),
                ('web_xieyi_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='web端选择的协议名称')),
                ('web_xieyi_yinzi', models.CharField(blank=True, default='', help_text='web端添加的监控因子，多个因子之间以半角逗号隔开', max_length=2000, null=True, verbose_name='web端添加的监控因子')),
                ('is_upload_dev_config_file', models.BooleanField(default=False, verbose_name='是否上传Dev配置文件')),
                ('dev_config_name', models.CharField(blank=True, default='', help_text='dev配置文件的名字，例如：instr_2000_N.dev', max_length=100, null=True, verbose_name='dev配置文件的名字')),
                ('telnet_host_ip', models.CharField(default='192.168.101.133', max_length=100, verbose_name='数采仪IP地址')),
                ('telnet_username', models.CharField(default='root', max_length=100, verbose_name='登录数采仪的用户名')),
                ('telnet_password', models.CharField(default='wwyc8888', max_length=100, verbose_name='登录数采仪的密码')),
                ('is_ftp_upload', models.BooleanField(default=False, verbose_name='是否上传配置文件')),
                ('xieyi_name', models.CharField(default='11020', max_length=100, verbose_name='协议二进制文件的名字')),
                ('xieyi_test_port', models.CharField(default='4', help_text='请填写数字，例如串口为COM4，则填写4', max_length=100, verbose_name='数采仪协议串口号')),
                ('xieyi_device_id', models.CharField(blank=True, default='1', help_text='下发或接收指令的设备ID号或站地址', max_length=100, null=True, verbose_name='设备ID号')),
                ('is_com_recive_and_send', models.BooleanField(default=False, verbose_name='是否进行数据接收和发送')),
                ('com_port', models.CharField(default='COM3', help_text='电脑与数采仪连接的USB口，例如USB口为COM4，则填写COM4', max_length=100, verbose_name='电脑与数采仪连接的USB口')),
                ('com_baudrate', models.CharField(default='9600', help_text='协议波特率，一般有4800/9600/19200/38400bps，如协议使用波特率为9600bps，则此处填写9600', max_length=100, verbose_name='协议波特率')),
                ('com_bytesize', models.CharField(default='8', help_text='协议数据位，一般有6、7、8，如协议使用数据位为8，则此处填写8', max_length=100, verbose_name='协议数据位')),
                ('com_parity', models.CharField(default='N', help_text='协议校验位，一般有N(无校验)、O（奇校验）、E（偶校验）0、1，若协议使用无校验，则此处填写大写的N；若协议使用奇校验，则此处填写大写的O；若协议使用偶校验，则此处填写大写的E；', max_length=100, verbose_name='协议校验位')),
                ('com_stopbits', models.CharField(default='1', help_text='协议停止位，一般有1、1.5、2，如协议使用停止位为1，则此处填写1', max_length=100, verbose_name='协议停止位')),
                ('is_with_code_assert', models.BooleanField(default=False, verbose_name='断言结果是否带因子代码')),
                ('is_assert_file_success', models.BooleanField(default=False, verbose_name='是否断言协议预期解析结果在协议解析文件中')),
                ('is_assert_real_db_success', models.BooleanField(default=False, verbose_name='是否断言协议预期解析结果在实时数据库的表中')),
                ('is_assert_tcp_server_receive_success', models.BooleanField(default=False, verbose_name='是否断言协议预期解析结果在接收的报文中')),
                ('is_recriminat_recive_and_send', models.BooleanField(default=False, verbose_name='是否进行反控数据接收和发送')),
                ('tcp_server_ip', models.CharField(blank=True, default='192.168.101.123', max_length=100, null=True, verbose_name='数据上报平台的IP地址')),
                ('tcp_server_port', models.CharField(blank=True, default='63503', max_length=100, null=True, verbose_name='数据上报平台的端口号')),
                ('tcp_server_xieyi', models.CharField(blank=True, default='2007', max_length=100, null=True, verbose_name='数据上报平台的协议')),
                ('tcp_receive_delay_min', models.CharField(blank=True, default='10', max_length=100, null=True, verbose_name='tcp服务接收的数据为当前时间后延的时间（以分钟为单位）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('nodeconfig', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的Dev配置')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '协议测试之依赖配置',
                'verbose_name_plural': '协议测试之依赖配置',
            },
        ),
        migrations.CreateModel(
            name='XieyiRecriminatConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_project', models.CharField(default='', max_length=100, verbose_name='配置名称')),
                ('tcp_server_ip', models.CharField(blank=True, default='192.168.101.123', max_length=100, null=True, verbose_name='数据上报平台的IP地址')),
                ('tcp_server_port', models.CharField(blank=True, default='63503', max_length=100, null=True, verbose_name='数据上报平台的端口号')),
                ('tcp_receive_delay_min', models.CharField(blank=True, default='10', max_length=100, null=True, verbose_name='tcp服务接收的数据为当前时间后延的时间（以分钟为单位）')),
                ('recriminat_send_date', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='反控发送指令')),
                ('recriminat_receive_date', models.CharField(blank=True, default='', max_length=2000, null=True, verbose_name='反控响应指令')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '协议测试之反控配置',
                'verbose_name_plural': '协议测试之反控配置',
            },
        ),
        migrations.CreateModel(
            name='XieyiTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_project', models.CharField(default='', max_length=100, verbose_name='测试项目')),
                ('test_module', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='测试模块')),
                ('test_page', models.CharField(default='', max_length=100, verbose_name='测试页面')),
                ('case_priority', models.CharField(blank=True, choices=[('P0', '冒烟用例'), ('P1', '系统的重要功能用例'), ('P2', '系统的一般功能用例'), ('P3', '极低级别的用例')], default='P1', max_length=10, null=True, verbose_name='用例优先级')),
                ('test_case_title', models.CharField(default='', max_length=200, verbose_name='测试内容的名称')),
                ('is_run_case', models.BooleanField(default=True, verbose_name='是否运行')),
                ('case_counts', models.IntegerField(default='1', help_text='循环次数，请填写数字，例如：1、2、3', verbose_name='循环次数')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('depend_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDateOrder', verbose_name='依赖的测试配置')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '协议测试之测试用例',
                'verbose_name_plural': '协议测试之测试用例',
            },
        ),
        migrations.CreateModel(
            name='YinZiCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_standard', models.CharField(default='标准HJ212-2017', max_length=100, verbose_name='国标标准')),
                ('table_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='表名')),
                ('yinzi_code', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='编码')),
                ('yinzi_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='中文名称')),
                ('yinzi_original_code', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='原编码')),
                ('yinzi_company_concentration', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='缺省计量单位（浓度）')),
                ('yinzi_company_emissions', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='缺省计量单位（排放量）')),
                ('yinzi_data_type_concentration', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='缺省数据类型（浓度）')),
                ('yinzi_des', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='描述')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
                ('write_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '因子及编码查询',
                'verbose_name_plural': '因子及编码查询',
            },
        ),
        migrations.AddField(
            model_name='tagattrib',
            name='tagcontent',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.TagContent', verbose_name='依赖的节点'),
        ),
        migrations.AddField(
            model_name='tagattrib',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='senderhexdataorder',
            name='xieyitestcase',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiTestCase', verbose_name='依赖的协议测试用例'),
        ),
        migrations.AddField(
            model_name='senderhexdata',
            name='xieyiconfigdate',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDate', verbose_name='依赖的协议测试'),
        ),
        migrations.AddField(
            model_name='restartxieyicommandorder',
            name='xieyiconfigdateorder',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDateOrder', verbose_name='依赖的协议测试'),
        ),
        migrations.AddField(
            model_name='restartxieyicommand',
            name='xieyiconfigdate',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDate', verbose_name='依赖的协议测试'),
        ),
        migrations.AddField(
            model_name='recriminatdataorder',
            name='xieyitestcase',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiTestCase', verbose_name='依赖的协议测试用例'),
        ),
        migrations.AddField(
            model_name='ftpuploadfileorder',
            name='xieyiconfigdateorder',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDateOrder', verbose_name='依赖的协议测试'),
        ),
        migrations.AddField(
            model_name='ftpuploadfile',
            name='xieyiconfigdate',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDate', verbose_name='依赖的协议测试'),
        ),
        migrations.AddField(
            model_name='configcontrolsendporssection',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcontrolsendporssection',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcontrolsendporsconvertrule',
            name='configcontrolsendporssection',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigControlSendPorsSection', verbose_name='依赖的反控指令_参数的处理（section）'),
        ),
        migrations.AddField(
            model_name='configcontrolsendporsconvertrule',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcontrolsendporsconvertrule',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcontrolsendparamid',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcontrolsendparamid',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcontrolsendcmd',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcontrolsendcmd',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcollectsendcmd',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcollectsendcmd',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcollectreceiveporssection',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcollectreceiveporssection',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcollectreceiveporsconvertrule',
            name='configcollectreceiveporssection',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigCollectReceivePorsSection', verbose_name='依赖的参数&状态配置之section'),
        ),
        migrations.AddField(
            model_name='configcollectreceiveporsconvertrule',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcollectreceiveporsconvertrule',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcollectreceivepors',
            name='configcollectsendcmd',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigCollectSendCmd', verbose_name='依赖的采集下发指令'),
        ),
        migrations.AddField(
            model_name='configcollectreceivepors',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcollectreceivepors',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='configcollectfactor',
            name='configcollectsendcmd',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.ConfigCollectSendCmd', verbose_name='依赖的采集下发指令'),
        ),
        migrations.AddField(
            model_name='configcollectfactor',
            name='nodeconfig',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.NodeConfig', verbose_name='依赖的节点配置'),
        ),
        migrations.AddField(
            model_name='configcollectfactor',
            name='write_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='closexieyicommandorder',
            name='xieyiconfigdateorder',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDateOrder', verbose_name='依赖的协议测试'),
        ),
        migrations.AddField(
            model_name='closexieyicommand',
            name='xieyiconfigdate',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='shucaiyidate.XieyiConfigDate', verbose_name='依赖的协议测试'),
        ),
    ]
