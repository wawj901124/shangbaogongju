# Generated by Django 2.0.5 on 2020-05-06 13:12

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PageLoadTimeReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testproject', models.CharField(default='', max_length=100, verbose_name='测试项目')),
                ('testmodule', models.CharField(default='', max_length=100, verbose_name='测试模块')),
                ('testpage', models.CharField(default='', max_length=100, verbose_name='测试页面')),
                ('testcasetitle', models.CharField(default='', max_length=100, verbose_name='测试内容的名称')),
                ('teststarttime', models.CharField(default='', max_length=100, verbose_name='开始运行时间')),
                ('forcount', models.CharField(default='', max_length=100, verbose_name='第几次循环')),
                ('page_load_time_no_catch', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='页面加载时间（单位：毫秒）')),
                ('dom_load_time_no_catch', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='DOM加载时间（单位：毫秒）')),
                ('page_load_time_with_catch', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='有缓存时页面加载时间（单位：毫秒）')),
                ('dom_load_time_with_catch', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='有缓存时DOM加载时间（单位：毫秒）')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '页面加载时间统计',
                'verbose_name_plural': '页面加载时间统计',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testproject', models.CharField(default='', max_length=50, verbose_name='测试项目')),
                ('testmodule', models.CharField(default='', max_length=50, verbose_name='项目模块')),
                ('reportname', models.CharField(default='', max_length=20, verbose_name='测试执行开始时间串')),
                ('reportfile', models.FileField(max_length=1000, upload_to='report/%Y%m', verbose_name='报告文件')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '报告记录',
                'verbose_name_plural': '报告记录',
            },
        ),
        migrations.CreateModel(
            name='RequestReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testproject', models.CharField(default='', max_length=100, verbose_name='测试项目')),
                ('testmodule', models.CharField(default='', max_length=100, verbose_name='测试模块')),
                ('testpage', models.CharField(default='', max_length=100, verbose_name='测试页面')),
                ('testcasetitle', models.CharField(default='', max_length=100, verbose_name='测试内容的名称')),
                ('teststarttime', models.CharField(default='', max_length=100, verbose_name='开始运行时间')),
                ('forcount', models.CharField(default='', max_length=100, verbose_name='第几次循环')),
                ('test_result', models.CharField(blank=True, choices=[('P0', '通过'), ('P1', '失败')], default='', max_length=10, null=True, verbose_name='接口测试结果')),
                ('response_status_code', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='接口响应status_code')),
                ('response_text', models.TextField(blank=True, default='', null=True, verbose_name='接口响应text')),
                ('response_content', models.TextField(blank=True, default='', null=True, verbose_name='接口响应content')),
                ('response_json', models.TextField(blank=True, default='', null=True, verbose_name='接口响应json')),
                ('response_elapsed', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='接口响应elapsed')),
                ('response_elapsed_microseconds', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='接口响应elapsed_microseconds(单位：毫秒)')),
                ('response_headers', models.TextField(blank=True, default='', null=True, verbose_name='接口响应headers')),
                ('response_cookies', models.TextField(blank=True, default='', null=True, verbose_name='接口响应cookies')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '接口测试结果统计',
                'verbose_name_plural': '接口测试结果统计',
            },
        ),
    ]
